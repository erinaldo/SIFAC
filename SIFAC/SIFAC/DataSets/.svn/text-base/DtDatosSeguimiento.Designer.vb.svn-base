'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("DtDatosSeguimiento"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DtDatosSeguimiento
    Inherits System.Data.DataSet
    
    Private tableDatosSeguimiento As DatosSeguimientoDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("DatosSeguimiento")) Is Nothing) Then
                MyBase.Tables.Add(New DatosSeguimientoDataTable(ds.Tables("DatosSeguimiento")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DatosSeguimiento() As DatosSeguimientoDataTable
        Get
            Return Me.tableDatosSeguimiento
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As DtDatosSeguimiento = CType(MyBase.Clone,DtDatosSeguimiento)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("DatosSeguimiento")) Is Nothing) Then
                MyBase.Tables.Add(New DatosSeguimientoDataTable(ds.Tables("DatosSeguimiento")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDatosSeguimiento = CType(MyBase.Tables("DatosSeguimiento"),DatosSeguimientoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDatosSeguimiento) Is Nothing) Then
                Me.tableDatosSeguimiento.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DtDatosSeguimiento"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DtDatosSeguimiento.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDatosSeguimiento = New DatosSeguimientoDataTable
        MyBase.Tables.Add(Me.tableDatosSeguimiento)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDatosSeguimiento() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DtDatosSeguimiento = New DtDatosSeguimiento
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub DatosSeguimientoRowChangeEventHandler(ByVal sender As Object, ByVal e As DatosSeguimientoRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DatosSeguimientoDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnFecha As System.Data.DataColumn
        
        Private columnObjetivoBitacora As System.Data.DataColumn
        
        Private columnDescripcionBitacora As System.Data.DataColumn
        
        Private columnCostoSeguimiento As System.Data.DataColumn
        
        Private columnobjTipoSeguimientoID As System.Data.DataColumn
        
        Private columnTipoSeguimiento As System.Data.DataColumn
        
        Private columnStbPersonaID As System.Data.DataColumn
        
        Private columnCliente As System.Data.DataColumn
        
        Private columnStbBitacoraClienteID As System.Data.DataColumn
        
        Private columnUsuarioCreacion As System.Data.DataColumn
        
        Private columnExpediente As System.Data.DataColumn
        
        Private columnTienda As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DatosSeguimiento"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaColumn() As System.Data.DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ObjetivoBitacoraColumn() As System.Data.DataColumn
            Get
                Return Me.columnObjetivoBitacora
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescripcionBitacoraColumn() As System.Data.DataColumn
            Get
                Return Me.columnDescripcionBitacora
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CostoSeguimientoColumn() As System.Data.DataColumn
            Get
                Return Me.columnCostoSeguimiento
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objTipoSeguimientoIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjTipoSeguimientoID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoSeguimientoColumn() As System.Data.DataColumn
            Get
                Return Me.columnTipoSeguimiento
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StbPersonaIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnStbPersonaID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ClienteColumn() As System.Data.DataColumn
            Get
                Return Me.columnCliente
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StbBitacoraClienteIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnStbBitacoraClienteID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UsuarioCreacionColumn() As System.Data.DataColumn
            Get
                Return Me.columnUsuarioCreacion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ExpedienteColumn() As System.Data.DataColumn
            Get
                Return Me.columnExpediente
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TiendaColumn() As System.Data.DataColumn
            Get
                Return Me.columnTienda
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DatosSeguimientoRow
            Get
                Return CType(Me.Rows(index),DatosSeguimientoRow)
            End Get
        End Property
        
        Public Event DatosSeguimientoRowChanging As DatosSeguimientoRowChangeEventHandler
        
        Public Event DatosSeguimientoRowChanged As DatosSeguimientoRowChangeEventHandler
        
        Public Event DatosSeguimientoRowDeleting As DatosSeguimientoRowChangeEventHandler
        
        Public Event DatosSeguimientoRowDeleted As DatosSeguimientoRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDatosSeguimientoRow(ByVal row As DatosSeguimientoRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDatosSeguimientoRow(ByVal Fecha As Date, ByVal ObjetivoBitacora As String, ByVal DescripcionBitacora As String, ByVal CostoSeguimiento As Decimal, ByVal objTipoSeguimientoID As Integer, ByVal TipoSeguimiento As String, ByVal StbPersonaID As String, ByVal Cliente As String, ByVal StbBitacoraClienteID As Integer, ByVal UsuarioCreacion As String, ByVal Expediente As String, ByVal Tienda As String) As DatosSeguimientoRow
            Dim rowDatosSeguimientoRow As DatosSeguimientoRow = CType(Me.NewRow,DatosSeguimientoRow)
            rowDatosSeguimientoRow.ItemArray = New Object() {Fecha, ObjetivoBitacora, DescripcionBitacora, CostoSeguimiento, objTipoSeguimientoID, TipoSeguimiento, StbPersonaID, Cliente, StbBitacoraClienteID, UsuarioCreacion, Expediente, Tienda}
            Me.Rows.Add(rowDatosSeguimientoRow)
            Return rowDatosSeguimientoRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByStbPersonaIDStbBitacoraClienteIDExpediente(ByVal StbPersonaID As String, ByVal StbBitacoraClienteID As Integer, ByVal Expediente As String) As DatosSeguimientoRow
            Return CType(Me.Rows.Find(New Object() {StbPersonaID, StbBitacoraClienteID, Expediente}),DatosSeguimientoRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As DatosSeguimientoDataTable = CType(MyBase.Clone,DatosSeguimientoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New DatosSeguimientoDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnFecha = MyBase.Columns("Fecha")
            Me.columnObjetivoBitacora = MyBase.Columns("ObjetivoBitacora")
            Me.columnDescripcionBitacora = MyBase.Columns("DescripcionBitacora")
            Me.columnCostoSeguimiento = MyBase.Columns("CostoSeguimiento")
            Me.columnobjTipoSeguimientoID = MyBase.Columns("objTipoSeguimientoID")
            Me.columnTipoSeguimiento = MyBase.Columns("TipoSeguimiento")
            Me.columnStbPersonaID = MyBase.Columns("StbPersonaID")
            Me.columnCliente = MyBase.Columns("Cliente")
            Me.columnStbBitacoraClienteID = MyBase.Columns("StbBitacoraClienteID")
            Me.columnUsuarioCreacion = MyBase.Columns("UsuarioCreacion")
            Me.columnExpediente = MyBase.Columns("Expediente")
            Me.columnTienda = MyBase.Columns("Tienda")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnFecha = New System.Data.DataColumn("Fecha", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha)
            Me.columnObjetivoBitacora = New System.Data.DataColumn("ObjetivoBitacora", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObjetivoBitacora)
            Me.columnDescripcionBitacora = New System.Data.DataColumn("DescripcionBitacora", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcionBitacora)
            Me.columnCostoSeguimiento = New System.Data.DataColumn("CostoSeguimiento", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCostoSeguimiento)
            Me.columnobjTipoSeguimientoID = New System.Data.DataColumn("objTipoSeguimientoID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjTipoSeguimientoID)
            Me.columnTipoSeguimiento = New System.Data.DataColumn("TipoSeguimiento", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoSeguimiento)
            Me.columnStbPersonaID = New System.Data.DataColumn("StbPersonaID", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStbPersonaID)
            Me.columnCliente = New System.Data.DataColumn("Cliente", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCliente)
            Me.columnStbBitacoraClienteID = New System.Data.DataColumn("StbBitacoraClienteID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStbBitacoraClienteID)
            Me.columnUsuarioCreacion = New System.Data.DataColumn("UsuarioCreacion", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsuarioCreacion)
            Me.columnExpediente = New System.Data.DataColumn("Expediente", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpediente)
            Me.columnTienda = New System.Data.DataColumn("Tienda", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTienda)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnStbPersonaID, Me.columnStbBitacoraClienteID, Me.columnExpediente}, true))
            Me.columnFecha.AllowDBNull = false
            Me.columnObjetivoBitacora.MaxLength = 500
            Me.columnDescripcionBitacora.MaxLength = 500
            Me.columnTipoSeguimiento.ReadOnly = true
            Me.columnTipoSeguimiento.MaxLength = 100
            Me.columnStbPersonaID.AllowDBNull = false
            Me.columnStbPersonaID.MaxLength = 16
            Me.columnCliente.MaxLength = 256
            Me.columnStbBitacoraClienteID.AllowDBNull = false
            Me.columnExpediente.AllowDBNull = false
            Me.columnExpediente.MaxLength = 10
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDatosSeguimientoRow() As DatosSeguimientoRow
            Return CType(Me.NewRow,DatosSeguimientoRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New DatosSeguimientoRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(DatosSeguimientoRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DatosSeguimientoRowChangedEvent) Is Nothing) Then
                RaiseEvent DatosSeguimientoRowChanged(Me, New DatosSeguimientoRowChangeEvent(CType(e.Row,DatosSeguimientoRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DatosSeguimientoRowChangingEvent) Is Nothing) Then
                RaiseEvent DatosSeguimientoRowChanging(Me, New DatosSeguimientoRowChangeEvent(CType(e.Row,DatosSeguimientoRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DatosSeguimientoRowDeletedEvent) Is Nothing) Then
                RaiseEvent DatosSeguimientoRowDeleted(Me, New DatosSeguimientoRowChangeEvent(CType(e.Row,DatosSeguimientoRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DatosSeguimientoRowDeletingEvent) Is Nothing) Then
                RaiseEvent DatosSeguimientoRowDeleting(Me, New DatosSeguimientoRowChangeEvent(CType(e.Row,DatosSeguimientoRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDatosSeguimientoRow(ByVal row As DatosSeguimientoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As DtDatosSeguimiento = New DtDatosSeguimiento
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DatosSeguimientoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DatosSeguimientoRow
        Inherits System.Data.DataRow
        
        Private tableDatosSeguimiento As DatosSeguimientoDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDatosSeguimiento = CType(Me.Table,DatosSeguimientoDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Fecha() As Date
            Get
                Return CType(Me(Me.tableDatosSeguimiento.FechaColumn),Date)
            End Get
            Set
                Me(Me.tableDatosSeguimiento.FechaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ObjetivoBitacora() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosSeguimiento.ObjetivoBitacoraColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'ObjetivoBitacora' in table 'DatosSeguimiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosSeguimiento.ObjetivoBitacoraColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescripcionBitacora() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosSeguimiento.DescripcionBitacoraColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'DescripcionBitacora' in table 'DatosSeguimiento' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosSeguimiento.DescripcionBitacoraColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CostoSeguimiento() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDatosSeguimiento.CostoSeguimientoColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'CostoSeguimiento' in table 'DatosSeguimiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosSeguimiento.CostoSeguimientoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objTipoSeguimientoID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDatosSeguimiento.objTipoSeguimientoIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'objTipoSeguimientoID' in table 'DatosSeguimiento' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosSeguimiento.objTipoSeguimientoIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TipoSeguimiento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosSeguimiento.TipoSeguimientoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'TipoSeguimiento' in table 'DatosSeguimiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosSeguimiento.TipoSeguimientoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property StbPersonaID() As String
            Get
                Return CType(Me(Me.tableDatosSeguimiento.StbPersonaIDColumn),String)
            End Get
            Set
                Me(Me.tableDatosSeguimiento.StbPersonaIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosSeguimiento.ClienteColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'Cliente' in table 'DatosSeguimiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosSeguimiento.ClienteColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property StbBitacoraClienteID() As Integer
            Get
                Return CType(Me(Me.tableDatosSeguimiento.StbBitacoraClienteIDColumn),Integer)
            End Get
            Set
                Me(Me.tableDatosSeguimiento.StbBitacoraClienteIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UsuarioCreacion() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosSeguimiento.UsuarioCreacionColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'UsuarioCreacion' in table 'DatosSeguimiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosSeguimiento.UsuarioCreacionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expediente() As String
            Get
                Return CType(Me(Me.tableDatosSeguimiento.ExpedienteColumn),String)
            End Get
            Set
                Me(Me.tableDatosSeguimiento.ExpedienteColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tienda() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosSeguimiento.TiendaColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'Tienda' in table 'DatosSeguimiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosSeguimiento.TiendaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsObjetivoBitacoraNull() As Boolean
            Return Me.IsNull(Me.tableDatosSeguimiento.ObjetivoBitacoraColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetObjetivoBitacoraNull()
            Me(Me.tableDatosSeguimiento.ObjetivoBitacoraColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescripcionBitacoraNull() As Boolean
            Return Me.IsNull(Me.tableDatosSeguimiento.DescripcionBitacoraColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescripcionBitacoraNull()
            Me(Me.tableDatosSeguimiento.DescripcionBitacoraColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCostoSeguimientoNull() As Boolean
            Return Me.IsNull(Me.tableDatosSeguimiento.CostoSeguimientoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCostoSeguimientoNull()
            Me(Me.tableDatosSeguimiento.CostoSeguimientoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsobjTipoSeguimientoIDNull() As Boolean
            Return Me.IsNull(Me.tableDatosSeguimiento.objTipoSeguimientoIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetobjTipoSeguimientoIDNull()
            Me(Me.tableDatosSeguimiento.objTipoSeguimientoIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipoSeguimientoNull() As Boolean
            Return Me.IsNull(Me.tableDatosSeguimiento.TipoSeguimientoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipoSeguimientoNull()
            Me(Me.tableDatosSeguimiento.TipoSeguimientoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsClienteNull() As Boolean
            Return Me.IsNull(Me.tableDatosSeguimiento.ClienteColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetClienteNull()
            Me(Me.tableDatosSeguimiento.ClienteColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUsuarioCreacionNull() As Boolean
            Return Me.IsNull(Me.tableDatosSeguimiento.UsuarioCreacionColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUsuarioCreacionNull()
            Me(Me.tableDatosSeguimiento.UsuarioCreacionColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTiendaNull() As Boolean
            Return Me.IsNull(Me.tableDatosSeguimiento.TiendaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTiendaNull()
            Me(Me.tableDatosSeguimiento.TiendaColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DatosSeguimientoRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As DatosSeguimientoRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DatosSeguimientoRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DatosSeguimientoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DtDatosSeguimientoTableAdapters
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.ComponentModel.ToolboxItem(true),  _
     System.ComponentModel.DataObjectAttribute(true),  _
     System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class AdaptadorSeguimiento
        Inherits System.ComponentModel.Component
        
        Private WithEvents _adapter As System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As System.Data.Common.DataTableMapping = New System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DatosSeguimiento"
            tableMapping.ColumnMappings.Add("Fecha", "Fecha")
            tableMapping.ColumnMappings.Add("ObjetivoBitacora", "ObjetivoBitacora")
            tableMapping.ColumnMappings.Add("DescripcionBitacora", "DescripcionBitacora")
            tableMapping.ColumnMappings.Add("CostoSeguimiento", "CostoSeguimiento")
            tableMapping.ColumnMappings.Add("objTipoSeguimientoID", "objTipoSeguimientoID")
            tableMapping.ColumnMappings.Add("TipoSeguimiento", "TipoSeguimiento")
            tableMapping.ColumnMappings.Add("StbPersonaID", "StbPersonaID")
            tableMapping.ColumnMappings.Add("Cliente", "Cliente")
            tableMapping.ColumnMappings.Add("StbBitacoraClienteID", "StbBitacoraClienteID")
            tableMapping.ColumnMappings.Add("Expediente", "Expediente")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.SCCUM.My.MySettings.Default.SCCUMConnectionString
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT * FROM vwRptSeguimiento"
            Me._commandCollection(0).CommandType = System.Data.CommandType.Text
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DtDatosSeguimiento.DatosSeguimientoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DtDatosSeguimiento.DatosSeguimientoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DtDatosSeguimiento.DatosSeguimientoDataTable = New DtDatosSeguimiento.DatosSeguimientoDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace

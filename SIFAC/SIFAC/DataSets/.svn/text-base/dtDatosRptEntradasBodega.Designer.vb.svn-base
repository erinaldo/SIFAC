'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("dtDatosRptEntradasBodega"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dtDatosRptEntradasBodega
    Inherits System.Data.DataSet
    
    Private tablevwRptEntradasBodega As vwRptEntradasBodegaDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("vwRptEntradasBodega")) Is Nothing) Then
                MyBase.Tables.Add(New vwRptEntradasBodegaDataTable(ds.Tables("vwRptEntradasBodega")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vwRptEntradasBodega() As vwRptEntradasBodegaDataTable
        Get
            Return Me.tablevwRptEntradasBodega
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As dtDatosRptEntradasBodega = CType(MyBase.Clone,dtDatosRptEntradasBodega)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("vwRptEntradasBodega")) Is Nothing) Then
                MyBase.Tables.Add(New vwRptEntradasBodegaDataTable(ds.Tables("vwRptEntradasBodega")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablevwRptEntradasBodega = CType(MyBase.Tables("vwRptEntradasBodega"),vwRptEntradasBodegaDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevwRptEntradasBodega) Is Nothing) Then
                Me.tablevwRptEntradasBodega.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dtDatosRptEntradasBodega"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dtDatosRptEntradasBodega.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablevwRptEntradasBodega = New vwRptEntradasBodegaDataTable
        MyBase.Tables.Add(Me.tablevwRptEntradasBodega)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializevwRptEntradasBodega() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dtDatosRptEntradasBodega = New dtDatosRptEntradasBodega
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub vwRptEntradasBodegaRowChangeEventHandler(ByVal sender As Object, ByVal e As vwRptEntradasBodegaRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vwRptEntradasBodegaDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnFechaEntrada As System.Data.DataColumn
        
        Private columnSivEntradaBodegaID As System.Data.DataColumn
        
        Private columnobjTiendaID As System.Data.DataColumn
        
        Private columnCodigo As System.Data.DataColumn
        
        Private columnNombreSucursal As System.Data.DataColumn
        
        Private columnobjRepuestoID As System.Data.DataColumn
        
        Private columnDescripcionCorta As System.Data.DataColumn
        
        Private columnAnulada As System.Data.DataColumn
        
        Private columnobjTipoEntradaID As System.Data.DataColumn
        
        Private columnTipoEntrada As System.Data.DataColumn
        
        Private columnCantidadEntrada As System.Data.DataColumn
        
        Private columnCosto As System.Data.DataColumn
        
        Private columnFechaFactura As System.Data.DataColumn
        
        Private columnNumeroPoliza As System.Data.DataColumn
        
        Private columnobjProveedorID As System.Data.DataColumn
        
        Private columnProveedor As System.Data.DataColumn
        
        Private columnCodigosProveedorRepuesto As System.Data.DataColumn
        
        Private columnNoEntrada As System.Data.DataColumn
        
        Private columnNumeroFactura As System.Data.DataColumn
        
        Private columnCantidadFacturada As System.Data.DataColumn
        
        Private columnSubTotal As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vwRptEntradasBodega"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaEntradaColumn() As System.Data.DataColumn
            Get
                Return Me.columnFechaEntrada
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SivEntradaBodegaIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnSivEntradaBodegaID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objTiendaIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjTiendaID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigoColumn() As System.Data.DataColumn
            Get
                Return Me.columnCodigo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NombreSucursalColumn() As System.Data.DataColumn
            Get
                Return Me.columnNombreSucursal
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objRepuestoIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjRepuestoID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescripcionCortaColumn() As System.Data.DataColumn
            Get
                Return Me.columnDescripcionCorta
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AnuladaColumn() As System.Data.DataColumn
            Get
                Return Me.columnAnulada
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objTipoEntradaIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjTipoEntradaID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoEntradaColumn() As System.Data.DataColumn
            Get
                Return Me.columnTipoEntrada
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CantidadEntradaColumn() As System.Data.DataColumn
            Get
                Return Me.columnCantidadEntrada
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CostoColumn() As System.Data.DataColumn
            Get
                Return Me.columnCosto
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaFacturaColumn() As System.Data.DataColumn
            Get
                Return Me.columnFechaFactura
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NumeroPolizaColumn() As System.Data.DataColumn
            Get
                Return Me.columnNumeroPoliza
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objProveedorIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjProveedorID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProveedorColumn() As System.Data.DataColumn
            Get
                Return Me.columnProveedor
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigosProveedorRepuestoColumn() As System.Data.DataColumn
            Get
                Return Me.columnCodigosProveedorRepuesto
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NoEntradaColumn() As System.Data.DataColumn
            Get
                Return Me.columnNoEntrada
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NumeroFacturaColumn() As System.Data.DataColumn
            Get
                Return Me.columnNumeroFactura
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CantidadFacturadaColumn() As System.Data.DataColumn
            Get
                Return Me.columnCantidadFacturada
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SubTotalColumn() As System.Data.DataColumn
            Get
                Return Me.columnSubTotal
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vwRptEntradasBodegaRow
            Get
                Return CType(Me.Rows(index),vwRptEntradasBodegaRow)
            End Get
        End Property
        
        Public Event vwRptEntradasBodegaRowChanging As vwRptEntradasBodegaRowChangeEventHandler
        
        Public Event vwRptEntradasBodegaRowChanged As vwRptEntradasBodegaRowChangeEventHandler
        
        Public Event vwRptEntradasBodegaRowDeleting As vwRptEntradasBodegaRowChangeEventHandler
        
        Public Event vwRptEntradasBodegaRowDeleted As vwRptEntradasBodegaRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddvwRptEntradasBodegaRow(ByVal row As vwRptEntradasBodegaRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddvwRptEntradasBodegaRow( _
                    ByVal FechaEntrada As Date,  _
                    ByVal SivEntradaBodegaID As Integer,  _
                    ByVal objTiendaID As Integer,  _
                    ByVal Codigo As String,  _
                    ByVal NombreSucursal As String,  _
                    ByVal objRepuestoID As Integer,  _
                    ByVal DescripcionCorta As String,  _
                    ByVal Anulada As Boolean,  _
                    ByVal objTipoEntradaID As Integer,  _
                    ByVal TipoEntrada As String,  _
                    ByVal CantidadEntrada As Decimal,  _
                    ByVal Costo As Decimal,  _
                    ByVal FechaFactura As Date,  _
                    ByVal NumeroPoliza As String,  _
                    ByVal objProveedorID As Integer,  _
                    ByVal Proveedor As String,  _
                    ByVal CodigosProveedorRepuesto As String,  _
                    ByVal NoEntrada As String,  _
                    ByVal NumeroFactura As String,  _
                    ByVal CantidadFacturada As Decimal,  _
                    ByVal SubTotal As Decimal) As vwRptEntradasBodegaRow
            Dim rowvwRptEntradasBodegaRow As vwRptEntradasBodegaRow = CType(Me.NewRow,vwRptEntradasBodegaRow)
            rowvwRptEntradasBodegaRow.ItemArray = New Object() {FechaEntrada, SivEntradaBodegaID, objTiendaID, Codigo, NombreSucursal, objRepuestoID, DescripcionCorta, Anulada, objTipoEntradaID, TipoEntrada, CantidadEntrada, Costo, FechaFactura, NumeroPoliza, objProveedorID, Proveedor, CodigosProveedorRepuesto, NoEntrada, NumeroFactura, CantidadFacturada, SubTotal}
            Me.Rows.Add(rowvwRptEntradasBodegaRow)
            Return rowvwRptEntradasBodegaRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySivEntradaBodegaID(ByVal SivEntradaBodegaID As Integer) As vwRptEntradasBodegaRow
            Return CType(Me.Rows.Find(New Object() {SivEntradaBodegaID}),vwRptEntradasBodegaRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As vwRptEntradasBodegaDataTable = CType(MyBase.Clone,vwRptEntradasBodegaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New vwRptEntradasBodegaDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnFechaEntrada = MyBase.Columns("FechaEntrada")
            Me.columnSivEntradaBodegaID = MyBase.Columns("SivEntradaBodegaID")
            Me.columnobjTiendaID = MyBase.Columns("objTiendaID")
            Me.columnCodigo = MyBase.Columns("Codigo")
            Me.columnNombreSucursal = MyBase.Columns("NombreSucursal")
            Me.columnobjRepuestoID = MyBase.Columns("objRepuestoID")
            Me.columnDescripcionCorta = MyBase.Columns("DescripcionCorta")
            Me.columnAnulada = MyBase.Columns("Anulada")
            Me.columnobjTipoEntradaID = MyBase.Columns("objTipoEntradaID")
            Me.columnTipoEntrada = MyBase.Columns("TipoEntrada")
            Me.columnCantidadEntrada = MyBase.Columns("CantidadEntrada")
            Me.columnCosto = MyBase.Columns("Costo")
            Me.columnFechaFactura = MyBase.Columns("FechaFactura")
            Me.columnNumeroPoliza = MyBase.Columns("NumeroPoliza")
            Me.columnobjProveedorID = MyBase.Columns("objProveedorID")
            Me.columnProveedor = MyBase.Columns("Proveedor")
            Me.columnCodigosProveedorRepuesto = MyBase.Columns("CodigosProveedorRepuesto")
            Me.columnNoEntrada = MyBase.Columns("NoEntrada")
            Me.columnNumeroFactura = MyBase.Columns("NumeroFactura")
            Me.columnCantidadFacturada = MyBase.Columns("CantidadFacturada")
            Me.columnSubTotal = MyBase.Columns("SubTotal")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnFechaEntrada = New System.Data.DataColumn("FechaEntrada", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaEntrada)
            Me.columnSivEntradaBodegaID = New System.Data.DataColumn("SivEntradaBodegaID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSivEntradaBodegaID)
            Me.columnobjTiendaID = New System.Data.DataColumn("objTiendaID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjTiendaID)
            Me.columnCodigo = New System.Data.DataColumn("Codigo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigo)
            Me.columnNombreSucursal = New System.Data.DataColumn("NombreSucursal", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreSucursal)
            Me.columnobjRepuestoID = New System.Data.DataColumn("objRepuestoID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjRepuestoID)
            Me.columnDescripcionCorta = New System.Data.DataColumn("DescripcionCorta", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcionCorta)
            Me.columnAnulada = New System.Data.DataColumn("Anulada", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnulada)
            Me.columnobjTipoEntradaID = New System.Data.DataColumn("objTipoEntradaID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjTipoEntradaID)
            Me.columnTipoEntrada = New System.Data.DataColumn("TipoEntrada", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoEntrada)
            Me.columnCantidadEntrada = New System.Data.DataColumn("CantidadEntrada", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidadEntrada)
            Me.columnCosto = New System.Data.DataColumn("Costo", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCosto)
            Me.columnFechaFactura = New System.Data.DataColumn("FechaFactura", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaFactura)
            Me.columnNumeroPoliza = New System.Data.DataColumn("NumeroPoliza", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroPoliza)
            Me.columnobjProveedorID = New System.Data.DataColumn("objProveedorID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjProveedorID)
            Me.columnProveedor = New System.Data.DataColumn("Proveedor", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProveedor)
            Me.columnCodigosProveedorRepuesto = New System.Data.DataColumn("CodigosProveedorRepuesto", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigosProveedorRepuesto)
            Me.columnNoEntrada = New System.Data.DataColumn("NoEntrada", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoEntrada)
            Me.columnNumeroFactura = New System.Data.DataColumn("NumeroFactura", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroFactura)
            Me.columnCantidadFacturada = New System.Data.DataColumn("CantidadFacturada", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidadFacturada)
            Me.columnSubTotal = New System.Data.DataColumn("SubTotal", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotal)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnSivEntradaBodegaID}, true))
            Me.columnFechaEntrada.AllowDBNull = false
            Me.columnSivEntradaBodegaID.AllowDBNull = false
            Me.columnSivEntradaBodegaID.Unique = true
            Me.columnobjTiendaID.AllowDBNull = false
            Me.columnCodigo.MaxLength = 4
            Me.columnNombreSucursal.AllowDBNull = false
            Me.columnNombreSucursal.MaxLength = 50
            Me.columnobjRepuestoID.AllowDBNull = false
            Me.columnDescripcionCorta.AllowDBNull = false
            Me.columnDescripcionCorta.MaxLength = 40
            Me.columnAnulada.AllowDBNull = false
            Me.columnobjTipoEntradaID.AllowDBNull = false
            Me.columnTipoEntrada.AllowDBNull = false
            Me.columnTipoEntrada.MaxLength = 100
            Me.columnCantidadEntrada.AllowDBNull = false
            Me.columnCosto.AllowDBNull = false
            Me.columnNumeroPoliza.MaxLength = 15
            Me.columnProveedor.ReadOnly = true
            Me.columnProveedor.MaxLength = 200
            Me.columnCodigosProveedorRepuesto.ReadOnly = true
            Me.columnCodigosProveedorRepuesto.MaxLength = 255
            Me.columnNoEntrada.ReadOnly = true
            Me.columnNoEntrada.MaxLength = 20
            Me.columnNumeroFactura.MaxLength = 40
            Me.columnCantidadFacturada.AllowDBNull = false
            Me.columnSubTotal.ReadOnly = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewvwRptEntradasBodegaRow() As vwRptEntradasBodegaRow
            Return CType(Me.NewRow,vwRptEntradasBodegaRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New vwRptEntradasBodegaRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(vwRptEntradasBodegaRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vwRptEntradasBodegaRowChangedEvent) Is Nothing) Then
                RaiseEvent vwRptEntradasBodegaRowChanged(Me, New vwRptEntradasBodegaRowChangeEvent(CType(e.Row,vwRptEntradasBodegaRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vwRptEntradasBodegaRowChangingEvent) Is Nothing) Then
                RaiseEvent vwRptEntradasBodegaRowChanging(Me, New vwRptEntradasBodegaRowChangeEvent(CType(e.Row,vwRptEntradasBodegaRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vwRptEntradasBodegaRowDeletedEvent) Is Nothing) Then
                RaiseEvent vwRptEntradasBodegaRowDeleted(Me, New vwRptEntradasBodegaRowChangeEvent(CType(e.Row,vwRptEntradasBodegaRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vwRptEntradasBodegaRowDeletingEvent) Is Nothing) Then
                RaiseEvent vwRptEntradasBodegaRowDeleting(Me, New vwRptEntradasBodegaRowChangeEvent(CType(e.Row,vwRptEntradasBodegaRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovevwRptEntradasBodegaRow(ByVal row As vwRptEntradasBodegaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dtDatosRptEntradasBodega = New dtDatosRptEntradasBodega
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vwRptEntradasBodegaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class vwRptEntradasBodegaRow
        Inherits System.Data.DataRow
        
        Private tablevwRptEntradasBodega As vwRptEntradasBodegaDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevwRptEntradasBodega = CType(Me.Table,vwRptEntradasBodegaDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FechaEntrada() As Date
            Get
                Return CType(Me(Me.tablevwRptEntradasBodega.FechaEntradaColumn),Date)
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.FechaEntradaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SivEntradaBodegaID() As Integer
            Get
                Return CType(Me(Me.tablevwRptEntradasBodega.SivEntradaBodegaIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.SivEntradaBodegaIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objTiendaID() As Integer
            Get
                Return CType(Me(Me.tablevwRptEntradasBodega.objTiendaIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.objTiendaIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Codigo() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwRptEntradasBodega.CodigoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'Codigo' in table 'vwRptEntradasBodega' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.CodigoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NombreSucursal() As String
            Get
                Return CType(Me(Me.tablevwRptEntradasBodega.NombreSucursalColumn),String)
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.NombreSucursalColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objRepuestoID() As Integer
            Get
                Return CType(Me(Me.tablevwRptEntradasBodega.objRepuestoIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.objRepuestoIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescripcionCorta() As String
            Get
                Return CType(Me(Me.tablevwRptEntradasBodega.DescripcionCortaColumn),String)
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.DescripcionCortaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Anulada() As Boolean
            Get
                Return CType(Me(Me.tablevwRptEntradasBodega.AnuladaColumn),Boolean)
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.AnuladaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objTipoEntradaID() As Integer
            Get
                Return CType(Me(Me.tablevwRptEntradasBodega.objTipoEntradaIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.objTipoEntradaIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TipoEntrada() As String
            Get
                Return CType(Me(Me.tablevwRptEntradasBodega.TipoEntradaColumn),String)
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.TipoEntradaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CantidadEntrada() As Decimal
            Get
                Return CType(Me(Me.tablevwRptEntradasBodega.CantidadEntradaColumn),Decimal)
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.CantidadEntradaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Costo() As Decimal
            Get
                Return CType(Me(Me.tablevwRptEntradasBodega.CostoColumn),Decimal)
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.CostoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FechaFactura() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevwRptEntradasBodega.FechaFacturaColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'FechaFactura' in table 'vwRptEntradasBodega' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.FechaFacturaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NumeroPoliza() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwRptEntradasBodega.NumeroPolizaColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'NumeroPoliza' in table 'vwRptEntradasBodega' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.NumeroPolizaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objProveedorID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwRptEntradasBodega.objProveedorIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'objProveedorID' in table 'vwRptEntradasBodega' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.objProveedorIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Proveedor() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwRptEntradasBodega.ProveedorColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'Proveedor' in table 'vwRptEntradasBodega' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.ProveedorColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodigosProveedorRepuesto() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwRptEntradasBodega.CodigosProveedorRepuestoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'CodigosProveedorRepuesto' in table 'vwRptEntradasBodega' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.CodigosProveedorRepuestoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NoEntrada() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwRptEntradasBodega.NoEntradaColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'NoEntrada' in table 'vwRptEntradasBodega' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.NoEntradaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NumeroFactura() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwRptEntradasBodega.NumeroFacturaColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'NumeroFactura' in table 'vwRptEntradasBodega' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.NumeroFacturaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CantidadFacturada() As Decimal
            Get
                Return CType(Me(Me.tablevwRptEntradasBodega.CantidadFacturadaColumn),Decimal)
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.CantidadFacturadaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SubTotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevwRptEntradasBodega.SubTotalColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'SubTotal' in table 'vwRptEntradasBodega' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwRptEntradasBodega.SubTotalColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodigoNull() As Boolean
            Return Me.IsNull(Me.tablevwRptEntradasBodega.CodigoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodigoNull()
            Me(Me.tablevwRptEntradasBodega.CodigoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaFacturaNull() As Boolean
            Return Me.IsNull(Me.tablevwRptEntradasBodega.FechaFacturaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaFacturaNull()
            Me(Me.tablevwRptEntradasBodega.FechaFacturaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNumeroPolizaNull() As Boolean
            Return Me.IsNull(Me.tablevwRptEntradasBodega.NumeroPolizaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNumeroPolizaNull()
            Me(Me.tablevwRptEntradasBodega.NumeroPolizaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsobjProveedorIDNull() As Boolean
            Return Me.IsNull(Me.tablevwRptEntradasBodega.objProveedorIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetobjProveedorIDNull()
            Me(Me.tablevwRptEntradasBodega.objProveedorIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProveedorNull() As Boolean
            Return Me.IsNull(Me.tablevwRptEntradasBodega.ProveedorColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProveedorNull()
            Me(Me.tablevwRptEntradasBodega.ProveedorColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodigosProveedorRepuestoNull() As Boolean
            Return Me.IsNull(Me.tablevwRptEntradasBodega.CodigosProveedorRepuestoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodigosProveedorRepuestoNull()
            Me(Me.tablevwRptEntradasBodega.CodigosProveedorRepuestoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNoEntradaNull() As Boolean
            Return Me.IsNull(Me.tablevwRptEntradasBodega.NoEntradaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNoEntradaNull()
            Me(Me.tablevwRptEntradasBodega.NoEntradaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNumeroFacturaNull() As Boolean
            Return Me.IsNull(Me.tablevwRptEntradasBodega.NumeroFacturaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNumeroFacturaNull()
            Me(Me.tablevwRptEntradasBodega.NumeroFacturaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSubTotalNull() As Boolean
            Return Me.IsNull(Me.tablevwRptEntradasBodega.SubTotalColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSubTotalNull()
            Me(Me.tablevwRptEntradasBodega.SubTotalColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class vwRptEntradasBodegaRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As vwRptEntradasBodegaRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As vwRptEntradasBodegaRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As vwRptEntradasBodegaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dtDatosRptEntradasBodegaTableAdapters
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.ComponentModel.ToolboxItem(true),  _
     System.ComponentModel.DataObjectAttribute(true),  _
     System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vwRptEntradasBodegaTableAdapter
        Inherits System.ComponentModel.Component
        
        Private WithEvents _adapter As System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As System.Data.Common.DataTableMapping = New System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vwRptEntradasBodega"
            tableMapping.ColumnMappings.Add("FechaEntrada", "FechaEntrada")
            tableMapping.ColumnMappings.Add("SivEntradaBodegaID", "SivEntradaBodegaID")
            tableMapping.ColumnMappings.Add("objTiendaID", "objTiendaID")
            tableMapping.ColumnMappings.Add("Codigo", "Codigo")
            tableMapping.ColumnMappings.Add("NombreSucursal", "NombreSucursal")
            tableMapping.ColumnMappings.Add("objRepuestoID", "objRepuestoID")
            tableMapping.ColumnMappings.Add("DescripcionCorta", "DescripcionCorta")
            tableMapping.ColumnMappings.Add("Anulada", "Anulada")
            tableMapping.ColumnMappings.Add("objTipoEntradaID", "objTipoEntradaID")
            tableMapping.ColumnMappings.Add("TipoEntrada", "TipoEntrada")
            tableMapping.ColumnMappings.Add("CantidadEntrada", "CantidadEntrada")
            tableMapping.ColumnMappings.Add("Costo", "Costo")
            tableMapping.ColumnMappings.Add("FechaFactura", "FechaFactura")
            tableMapping.ColumnMappings.Add("NumeroPoliza", "NumeroPoliza")
            tableMapping.ColumnMappings.Add("objProveedorID", "objProveedorID")
            tableMapping.ColumnMappings.Add("Proveedor", "Proveedor")
            tableMapping.ColumnMappings.Add("CodigosProveedorRepuesto", "CodigosProveedorRepuesto")
            tableMapping.ColumnMappings.Add("NoEntrada", "NoEntrada")
            tableMapping.ColumnMappings.Add("NumeroFactura", "NumeroFactura")
            tableMapping.ColumnMappings.Add("CantidadFacturada", "CantidadFacturada")
            tableMapping.ColumnMappings.Add("SubTotal", "SubTotal")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.SCCUM.My.MySettings.Default.SCCUMConnectionString
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FechaEntrada, SivEntradaBodegaID, objTiendaID, Codigo, NombreSucursal, obj"& _ 
                "RepuestoID, DescripcionCorta, Anulada, objTipoEntradaID, TipoEntrada, CantidadEn"& _ 
                "trada, Costo, FechaFactura, NumeroPoliza, objProveedorID, Proveedor, CodigosProv"& _ 
                "eedorRepuesto, NoEntrada, NumeroFactura, CantidadFacturada, SubTotal FROM vwRptE"& _ 
                "ntradasBodega"
            Me._commandCollection(0).CommandType = System.Data.CommandType.Text
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dtDatosRptEntradasBodega.vwRptEntradasBodegaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dtDatosRptEntradasBodega.vwRptEntradasBodegaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dtDatosRptEntradasBodega.vwRptEntradasBodegaDataTable = New dtDatosRptEntradasBodega.vwRptEntradasBodegaDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace

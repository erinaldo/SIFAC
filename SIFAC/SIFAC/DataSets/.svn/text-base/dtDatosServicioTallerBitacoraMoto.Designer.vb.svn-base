'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("dtDatosServicioTallerBitacoraMoto"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dtDatosServicioTallerBitacoraMoto
    Inherits System.Data.DataSet
    
    Private tablevwStaServicioTallerBitacoraMoto As vwStaServicioTallerBitacoraMotoDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("vwStaServicioTallerBitacoraMoto")) Is Nothing) Then
                MyBase.Tables.Add(New vwStaServicioTallerBitacoraMotoDataTable(ds.Tables("vwStaServicioTallerBitacoraMoto")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vwStaServicioTallerBitacoraMoto() As vwStaServicioTallerBitacoraMotoDataTable
        Get
            Return Me.tablevwStaServicioTallerBitacoraMoto
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As dtDatosServicioTallerBitacoraMoto = CType(MyBase.Clone,dtDatosServicioTallerBitacoraMoto)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("vwStaServicioTallerBitacoraMoto")) Is Nothing) Then
                MyBase.Tables.Add(New vwStaServicioTallerBitacoraMotoDataTable(ds.Tables("vwStaServicioTallerBitacoraMoto")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablevwStaServicioTallerBitacoraMoto = CType(MyBase.Tables("vwStaServicioTallerBitacoraMoto"),vwStaServicioTallerBitacoraMotoDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevwStaServicioTallerBitacoraMoto) Is Nothing) Then
                Me.tablevwStaServicioTallerBitacoraMoto.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dtDatosServicioTallerBitacoraMoto"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dtDatosServicioTallerBitacoraMoto.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablevwStaServicioTallerBitacoraMoto = New vwStaServicioTallerBitacoraMotoDataTable
        MyBase.Tables.Add(Me.tablevwStaServicioTallerBitacoraMoto)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializevwStaServicioTallerBitacoraMoto() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dtDatosServicioTallerBitacoraMoto = New dtDatosServicioTallerBitacoraMoto
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub vwStaServicioTallerBitacoraMotoRowChangeEventHandler(ByVal sender As Object, ByVal e As vwStaServicioTallerBitacoraMotoRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vwStaServicioTallerBitacoraMotoDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnStaServicioTallerID As System.Data.DataColumn
        
        Private columnCliente As System.Data.DataColumn
        
        Private columnobjServicioTiendaID As System.Data.DataColumn
        
        Private columnNombreTiendaServicio As System.Data.DataColumn
        
        Private columnCodigoTiendaServicio As System.Data.DataColumn
        
        Private columnobjTipoServicioID As System.Data.DataColumn
        
        Private columnTipoServicio As System.Data.DataColumn
        
        Private columnEstadoServicio As System.Data.DataColumn
        
        Private columnFechaRecibida As System.Data.DataColumn
        
        Private columnFechaEntrega As System.Data.DataColumn
        
        Private columnobjTecnicoAsignadoID As System.Data.DataColumn
        
        Private columnNombreTecnico As System.Data.DataColumn
        
        Private columnModeloMoto As System.Data.DataColumn
        
        Private columnChasis As System.Data.DataColumn
        
        Private columnNoMotor As System.Data.DataColumn
        
        Private columnMarcaMoto As System.Data.DataColumn
        
        Private columnTrabajosRealizados As System.Data.DataColumn
        
        Private columnobjSccCuentaID As System.Data.DataColumn
        
        Private columnobjSccCuentaTiendaID As System.Data.DataColumn
        
        Private columnNombreTiendaCuenta As System.Data.DataColumn
        
        Private columnCodigoTiendaCuenta As System.Data.DataColumn
        
        Private columnNumeroServicio As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vwStaServicioTallerBitacoraMoto"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StaServicioTallerIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnStaServicioTallerID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ClienteColumn() As System.Data.DataColumn
            Get
                Return Me.columnCliente
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objServicioTiendaIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjServicioTiendaID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NombreTiendaServicioColumn() As System.Data.DataColumn
            Get
                Return Me.columnNombreTiendaServicio
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigoTiendaServicioColumn() As System.Data.DataColumn
            Get
                Return Me.columnCodigoTiendaServicio
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objTipoServicioIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjTipoServicioID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoServicioColumn() As System.Data.DataColumn
            Get
                Return Me.columnTipoServicio
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EstadoServicioColumn() As System.Data.DataColumn
            Get
                Return Me.columnEstadoServicio
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaRecibidaColumn() As System.Data.DataColumn
            Get
                Return Me.columnFechaRecibida
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaEntregaColumn() As System.Data.DataColumn
            Get
                Return Me.columnFechaEntrega
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objTecnicoAsignadoIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjTecnicoAsignadoID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NombreTecnicoColumn() As System.Data.DataColumn
            Get
                Return Me.columnNombreTecnico
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ModeloMotoColumn() As System.Data.DataColumn
            Get
                Return Me.columnModeloMoto
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ChasisColumn() As System.Data.DataColumn
            Get
                Return Me.columnChasis
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NoMotorColumn() As System.Data.DataColumn
            Get
                Return Me.columnNoMotor
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MarcaMotoColumn() As System.Data.DataColumn
            Get
                Return Me.columnMarcaMoto
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TrabajosRealizadosColumn() As System.Data.DataColumn
            Get
                Return Me.columnTrabajosRealizados
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objSccCuentaIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjSccCuentaID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objSccCuentaTiendaIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjSccCuentaTiendaID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NombreTiendaCuentaColumn() As System.Data.DataColumn
            Get
                Return Me.columnNombreTiendaCuenta
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigoTiendaCuentaColumn() As System.Data.DataColumn
            Get
                Return Me.columnCodigoTiendaCuenta
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NumeroServicioColumn() As System.Data.DataColumn
            Get
                Return Me.columnNumeroServicio
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vwStaServicioTallerBitacoraMotoRow
            Get
                Return CType(Me.Rows(index),vwStaServicioTallerBitacoraMotoRow)
            End Get
        End Property
        
        Public Event vwStaServicioTallerBitacoraMotoRowChanging As vwStaServicioTallerBitacoraMotoRowChangeEventHandler
        
        Public Event vwStaServicioTallerBitacoraMotoRowChanged As vwStaServicioTallerBitacoraMotoRowChangeEventHandler
        
        Public Event vwStaServicioTallerBitacoraMotoRowDeleting As vwStaServicioTallerBitacoraMotoRowChangeEventHandler
        
        Public Event vwStaServicioTallerBitacoraMotoRowDeleted As vwStaServicioTallerBitacoraMotoRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddvwStaServicioTallerBitacoraMotoRow(ByVal row As vwStaServicioTallerBitacoraMotoRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddvwStaServicioTallerBitacoraMotoRow( _
                    ByVal StaServicioTallerID As Integer,  _
                    ByVal Cliente As String,  _
                    ByVal objServicioTiendaID As Integer,  _
                    ByVal NombreTiendaServicio As String,  _
                    ByVal CodigoTiendaServicio As String,  _
                    ByVal objTipoServicioID As Integer,  _
                    ByVal TipoServicio As String,  _
                    ByVal EstadoServicio As String,  _
                    ByVal FechaRecibida As Date,  _
                    ByVal FechaEntrega As Date,  _
                    ByVal objTecnicoAsignadoID As Integer,  _
                    ByVal NombreTecnico As String,  _
                    ByVal ModeloMoto As String,  _
                    ByVal Chasis As String,  _
                    ByVal NoMotor As String,  _
                    ByVal MarcaMoto As String,  _
                    ByVal TrabajosRealizados As String,  _
                    ByVal objSccCuentaID As String,  _
                    ByVal objSccCuentaTiendaID As Integer,  _
                    ByVal NombreTiendaCuenta As String,  _
                    ByVal CodigoTiendaCuenta As String,  _
                    ByVal NumeroServicio As String) As vwStaServicioTallerBitacoraMotoRow
            Dim rowvwStaServicioTallerBitacoraMotoRow As vwStaServicioTallerBitacoraMotoRow = CType(Me.NewRow,vwStaServicioTallerBitacoraMotoRow)
            rowvwStaServicioTallerBitacoraMotoRow.ItemArray = New Object() {StaServicioTallerID, Cliente, objServicioTiendaID, NombreTiendaServicio, CodigoTiendaServicio, objTipoServicioID, TipoServicio, EstadoServicio, FechaRecibida, FechaEntrega, objTecnicoAsignadoID, NombreTecnico, ModeloMoto, Chasis, NoMotor, MarcaMoto, TrabajosRealizados, objSccCuentaID, objSccCuentaTiendaID, NombreTiendaCuenta, CodigoTiendaCuenta, NumeroServicio}
            Me.Rows.Add(rowvwStaServicioTallerBitacoraMotoRow)
            Return rowvwStaServicioTallerBitacoraMotoRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByStaServicioTallerID(ByVal StaServicioTallerID As Integer) As vwStaServicioTallerBitacoraMotoRow
            Return CType(Me.Rows.Find(New Object() {StaServicioTallerID}),vwStaServicioTallerBitacoraMotoRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As vwStaServicioTallerBitacoraMotoDataTable = CType(MyBase.Clone,vwStaServicioTallerBitacoraMotoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New vwStaServicioTallerBitacoraMotoDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnStaServicioTallerID = MyBase.Columns("StaServicioTallerID")
            Me.columnCliente = MyBase.Columns("Cliente")
            Me.columnobjServicioTiendaID = MyBase.Columns("objServicioTiendaID")
            Me.columnNombreTiendaServicio = MyBase.Columns("NombreTiendaServicio")
            Me.columnCodigoTiendaServicio = MyBase.Columns("CodigoTiendaServicio")
            Me.columnobjTipoServicioID = MyBase.Columns("objTipoServicioID")
            Me.columnTipoServicio = MyBase.Columns("TipoServicio")
            Me.columnEstadoServicio = MyBase.Columns("EstadoServicio")
            Me.columnFechaRecibida = MyBase.Columns("FechaRecibida")
            Me.columnFechaEntrega = MyBase.Columns("FechaEntrega")
            Me.columnobjTecnicoAsignadoID = MyBase.Columns("objTecnicoAsignadoID")
            Me.columnNombreTecnico = MyBase.Columns("NombreTecnico")
            Me.columnModeloMoto = MyBase.Columns("ModeloMoto")
            Me.columnChasis = MyBase.Columns("Chasis")
            Me.columnNoMotor = MyBase.Columns("NoMotor")
            Me.columnMarcaMoto = MyBase.Columns("MarcaMoto")
            Me.columnTrabajosRealizados = MyBase.Columns("TrabajosRealizados")
            Me.columnobjSccCuentaID = MyBase.Columns("objSccCuentaID")
            Me.columnobjSccCuentaTiendaID = MyBase.Columns("objSccCuentaTiendaID")
            Me.columnNombreTiendaCuenta = MyBase.Columns("NombreTiendaCuenta")
            Me.columnCodigoTiendaCuenta = MyBase.Columns("CodigoTiendaCuenta")
            Me.columnNumeroServicio = MyBase.Columns("NumeroServicio")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnStaServicioTallerID = New System.Data.DataColumn("StaServicioTallerID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStaServicioTallerID)
            Me.columnCliente = New System.Data.DataColumn("Cliente", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCliente)
            Me.columnobjServicioTiendaID = New System.Data.DataColumn("objServicioTiendaID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjServicioTiendaID)
            Me.columnNombreTiendaServicio = New System.Data.DataColumn("NombreTiendaServicio", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreTiendaServicio)
            Me.columnCodigoTiendaServicio = New System.Data.DataColumn("CodigoTiendaServicio", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoTiendaServicio)
            Me.columnobjTipoServicioID = New System.Data.DataColumn("objTipoServicioID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjTipoServicioID)
            Me.columnTipoServicio = New System.Data.DataColumn("TipoServicio", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoServicio)
            Me.columnEstadoServicio = New System.Data.DataColumn("EstadoServicio", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstadoServicio)
            Me.columnFechaRecibida = New System.Data.DataColumn("FechaRecibida", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaRecibida)
            Me.columnFechaEntrega = New System.Data.DataColumn("FechaEntrega", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaEntrega)
            Me.columnobjTecnicoAsignadoID = New System.Data.DataColumn("objTecnicoAsignadoID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjTecnicoAsignadoID)
            Me.columnNombreTecnico = New System.Data.DataColumn("NombreTecnico", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreTecnico)
            Me.columnModeloMoto = New System.Data.DataColumn("ModeloMoto", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModeloMoto)
            Me.columnChasis = New System.Data.DataColumn("Chasis", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChasis)
            Me.columnNoMotor = New System.Data.DataColumn("NoMotor", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoMotor)
            Me.columnMarcaMoto = New System.Data.DataColumn("MarcaMoto", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMarcaMoto)
            Me.columnTrabajosRealizados = New System.Data.DataColumn("TrabajosRealizados", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrabajosRealizados)
            Me.columnobjSccCuentaID = New System.Data.DataColumn("objSccCuentaID", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjSccCuentaID)
            Me.columnobjSccCuentaTiendaID = New System.Data.DataColumn("objSccCuentaTiendaID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjSccCuentaTiendaID)
            Me.columnNombreTiendaCuenta = New System.Data.DataColumn("NombreTiendaCuenta", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreTiendaCuenta)
            Me.columnCodigoTiendaCuenta = New System.Data.DataColumn("CodigoTiendaCuenta", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoTiendaCuenta)
            Me.columnNumeroServicio = New System.Data.DataColumn("NumeroServicio", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroServicio)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnStaServicioTallerID}, true))
            Me.columnStaServicioTallerID.AllowDBNull = false
            Me.columnStaServicioTallerID.Unique = true
            Me.columnCliente.ReadOnly = true
            Me.columnCliente.MaxLength = 200
            Me.columnobjServicioTiendaID.AllowDBNull = false
            Me.columnNombreTiendaServicio.MaxLength = 50
            Me.columnCodigoTiendaServicio.MaxLength = 4
            Me.columnobjTipoServicioID.AllowDBNull = false
            Me.columnTipoServicio.AllowDBNull = false
            Me.columnTipoServicio.MaxLength = 100
            Me.columnEstadoServicio.AllowDBNull = false
            Me.columnEstadoServicio.MaxLength = 100
            Me.columnFechaRecibida.AllowDBNull = false
            Me.columnobjTecnicoAsignadoID.AllowDBNull = false
            Me.columnNombreTecnico.ReadOnly = true
            Me.columnNombreTecnico.MaxLength = 100
            Me.columnModeloMoto.MaxLength = 50
            Me.columnChasis.MaxLength = 20
            Me.columnNoMotor.MaxLength = 20
            Me.columnMarcaMoto.MaxLength = 100
            Me.columnTrabajosRealizados.ReadOnly = true
            Me.columnTrabajosRealizados.MaxLength = 800
            Me.columnobjSccCuentaID.AllowDBNull = false
            Me.columnobjSccCuentaID.MaxLength = 15
            Me.columnNombreTiendaCuenta.MaxLength = 50
            Me.columnCodigoTiendaCuenta.MaxLength = 4
            Me.columnNumeroServicio.ReadOnly = true
            Me.columnNumeroServicio.MaxLength = 20
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewvwStaServicioTallerBitacoraMotoRow() As vwStaServicioTallerBitacoraMotoRow
            Return CType(Me.NewRow,vwStaServicioTallerBitacoraMotoRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New vwStaServicioTallerBitacoraMotoRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(vwStaServicioTallerBitacoraMotoRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vwStaServicioTallerBitacoraMotoRowChangedEvent) Is Nothing) Then
                RaiseEvent vwStaServicioTallerBitacoraMotoRowChanged(Me, New vwStaServicioTallerBitacoraMotoRowChangeEvent(CType(e.Row,vwStaServicioTallerBitacoraMotoRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vwStaServicioTallerBitacoraMotoRowChangingEvent) Is Nothing) Then
                RaiseEvent vwStaServicioTallerBitacoraMotoRowChanging(Me, New vwStaServicioTallerBitacoraMotoRowChangeEvent(CType(e.Row,vwStaServicioTallerBitacoraMotoRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vwStaServicioTallerBitacoraMotoRowDeletedEvent) Is Nothing) Then
                RaiseEvent vwStaServicioTallerBitacoraMotoRowDeleted(Me, New vwStaServicioTallerBitacoraMotoRowChangeEvent(CType(e.Row,vwStaServicioTallerBitacoraMotoRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vwStaServicioTallerBitacoraMotoRowDeletingEvent) Is Nothing) Then
                RaiseEvent vwStaServicioTallerBitacoraMotoRowDeleting(Me, New vwStaServicioTallerBitacoraMotoRowChangeEvent(CType(e.Row,vwStaServicioTallerBitacoraMotoRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovevwStaServicioTallerBitacoraMotoRow(ByVal row As vwStaServicioTallerBitacoraMotoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dtDatosServicioTallerBitacoraMoto = New dtDatosServicioTallerBitacoraMoto
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vwStaServicioTallerBitacoraMotoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class vwStaServicioTallerBitacoraMotoRow
        Inherits System.Data.DataRow
        
        Private tablevwStaServicioTallerBitacoraMoto As vwStaServicioTallerBitacoraMotoDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevwStaServicioTallerBitacoraMoto = CType(Me.Table,vwStaServicioTallerBitacoraMotoDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property StaServicioTallerID() As Integer
            Get
                Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.StaServicioTallerIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.StaServicioTallerIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.ClienteColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'Cliente' in table 'vwStaServicioTallerBitacoraMoto' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.ClienteColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objServicioTiendaID() As Integer
            Get
                Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.objServicioTiendaIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.objServicioTiendaIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NombreTiendaServicio() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.NombreTiendaServicioColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'NombreTiendaServicio' in table 'vwStaServicioTallerBitacora"& _ 
                            "Moto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.NombreTiendaServicioColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodigoTiendaServicio() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.CodigoTiendaServicioColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'CodigoTiendaServicio' in table 'vwStaServicioTallerBitacora"& _ 
                            "Moto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.CodigoTiendaServicioColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objTipoServicioID() As Integer
            Get
                Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.objTipoServicioIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.objTipoServicioIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TipoServicio() As String
            Get
                Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.TipoServicioColumn),String)
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.TipoServicioColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EstadoServicio() As String
            Get
                Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.EstadoServicioColumn),String)
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.EstadoServicioColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FechaRecibida() As Date
            Get
                Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.FechaRecibidaColumn),Date)
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.FechaRecibidaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FechaEntrega() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.FechaEntregaColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'FechaEntrega' in table 'vwStaServicioTallerBitacoraMoto' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.FechaEntregaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objTecnicoAsignadoID() As Integer
            Get
                Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.objTecnicoAsignadoIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.objTecnicoAsignadoIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NombreTecnico() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.NombreTecnicoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'NombreTecnico' in table 'vwStaServicioTallerBitacoraMoto' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.NombreTecnicoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ModeloMoto() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.ModeloMotoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'ModeloMoto' in table 'vwStaServicioTallerBitacoraMoto' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.ModeloMotoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Chasis() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.ChasisColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'Chasis' in table 'vwStaServicioTallerBitacoraMoto' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.ChasisColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NoMotor() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.NoMotorColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'NoMotor' in table 'vwStaServicioTallerBitacoraMoto' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.NoMotorColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MarcaMoto() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.MarcaMotoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'MarcaMoto' in table 'vwStaServicioTallerBitacoraMoto' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.MarcaMotoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TrabajosRealizados() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.TrabajosRealizadosColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'TrabajosRealizados' in table 'vwStaServicioTallerBitacoraMo"& _ 
                            "to' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.TrabajosRealizadosColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objSccCuentaID() As String
            Get
                Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.objSccCuentaIDColumn),String)
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.objSccCuentaIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objSccCuentaTiendaID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.objSccCuentaTiendaIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'objSccCuentaTiendaID' in table 'vwStaServicioTallerBitacora"& _ 
                            "Moto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.objSccCuentaTiendaIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NombreTiendaCuenta() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.NombreTiendaCuentaColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'NombreTiendaCuenta' in table 'vwStaServicioTallerBitacoraMo"& _ 
                            "to' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.NombreTiendaCuentaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodigoTiendaCuenta() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.CodigoTiendaCuentaColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'CodigoTiendaCuenta' in table 'vwStaServicioTallerBitacoraMo"& _ 
                            "to' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.CodigoTiendaCuentaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NumeroServicio() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwStaServicioTallerBitacoraMoto.NumeroServicioColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'NumeroServicio' in table 'vwStaServicioTallerBitacoraMoto' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwStaServicioTallerBitacoraMoto.NumeroServicioColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsClienteNull() As Boolean
            Return Me.IsNull(Me.tablevwStaServicioTallerBitacoraMoto.ClienteColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetClienteNull()
            Me(Me.tablevwStaServicioTallerBitacoraMoto.ClienteColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNombreTiendaServicioNull() As Boolean
            Return Me.IsNull(Me.tablevwStaServicioTallerBitacoraMoto.NombreTiendaServicioColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNombreTiendaServicioNull()
            Me(Me.tablevwStaServicioTallerBitacoraMoto.NombreTiendaServicioColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodigoTiendaServicioNull() As Boolean
            Return Me.IsNull(Me.tablevwStaServicioTallerBitacoraMoto.CodigoTiendaServicioColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodigoTiendaServicioNull()
            Me(Me.tablevwStaServicioTallerBitacoraMoto.CodigoTiendaServicioColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaEntregaNull() As Boolean
            Return Me.IsNull(Me.tablevwStaServicioTallerBitacoraMoto.FechaEntregaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaEntregaNull()
            Me(Me.tablevwStaServicioTallerBitacoraMoto.FechaEntregaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNombreTecnicoNull() As Boolean
            Return Me.IsNull(Me.tablevwStaServicioTallerBitacoraMoto.NombreTecnicoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNombreTecnicoNull()
            Me(Me.tablevwStaServicioTallerBitacoraMoto.NombreTecnicoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsModeloMotoNull() As Boolean
            Return Me.IsNull(Me.tablevwStaServicioTallerBitacoraMoto.ModeloMotoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetModeloMotoNull()
            Me(Me.tablevwStaServicioTallerBitacoraMoto.ModeloMotoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsChasisNull() As Boolean
            Return Me.IsNull(Me.tablevwStaServicioTallerBitacoraMoto.ChasisColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetChasisNull()
            Me(Me.tablevwStaServicioTallerBitacoraMoto.ChasisColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNoMotorNull() As Boolean
            Return Me.IsNull(Me.tablevwStaServicioTallerBitacoraMoto.NoMotorColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNoMotorNull()
            Me(Me.tablevwStaServicioTallerBitacoraMoto.NoMotorColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMarcaMotoNull() As Boolean
            Return Me.IsNull(Me.tablevwStaServicioTallerBitacoraMoto.MarcaMotoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMarcaMotoNull()
            Me(Me.tablevwStaServicioTallerBitacoraMoto.MarcaMotoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTrabajosRealizadosNull() As Boolean
            Return Me.IsNull(Me.tablevwStaServicioTallerBitacoraMoto.TrabajosRealizadosColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTrabajosRealizadosNull()
            Me(Me.tablevwStaServicioTallerBitacoraMoto.TrabajosRealizadosColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsobjSccCuentaTiendaIDNull() As Boolean
            Return Me.IsNull(Me.tablevwStaServicioTallerBitacoraMoto.objSccCuentaTiendaIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetobjSccCuentaTiendaIDNull()
            Me(Me.tablevwStaServicioTallerBitacoraMoto.objSccCuentaTiendaIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNombreTiendaCuentaNull() As Boolean
            Return Me.IsNull(Me.tablevwStaServicioTallerBitacoraMoto.NombreTiendaCuentaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNombreTiendaCuentaNull()
            Me(Me.tablevwStaServicioTallerBitacoraMoto.NombreTiendaCuentaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodigoTiendaCuentaNull() As Boolean
            Return Me.IsNull(Me.tablevwStaServicioTallerBitacoraMoto.CodigoTiendaCuentaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodigoTiendaCuentaNull()
            Me(Me.tablevwStaServicioTallerBitacoraMoto.CodigoTiendaCuentaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNumeroServicioNull() As Boolean
            Return Me.IsNull(Me.tablevwStaServicioTallerBitacoraMoto.NumeroServicioColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNumeroServicioNull()
            Me(Me.tablevwStaServicioTallerBitacoraMoto.NumeroServicioColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class vwStaServicioTallerBitacoraMotoRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As vwStaServicioTallerBitacoraMotoRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As vwStaServicioTallerBitacoraMotoRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As vwStaServicioTallerBitacoraMotoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dtDatosServicioTallerBitacoraMotoTableAdapters
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.ComponentModel.ToolboxItem(true),  _
     System.ComponentModel.DataObjectAttribute(true),  _
     System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vwStaServicioTallerBitacoraMotoTableAdapter
        Inherits System.ComponentModel.Component
        
        Private WithEvents _adapter As System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As System.Data.Common.DataTableMapping = New System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vwStaServicioTallerBitacoraMoto"
            tableMapping.ColumnMappings.Add("StaServicioTallerID", "StaServicioTallerID")
            tableMapping.ColumnMappings.Add("Cliente", "Cliente")
            tableMapping.ColumnMappings.Add("objServicioTiendaID", "objServicioTiendaID")
            tableMapping.ColumnMappings.Add("NombreTiendaServicio", "NombreTiendaServicio")
            tableMapping.ColumnMappings.Add("CodigoTiendaServicio", "CodigoTiendaServicio")
            tableMapping.ColumnMappings.Add("objTipoServicioID", "objTipoServicioID")
            tableMapping.ColumnMappings.Add("TipoServicio", "TipoServicio")
            tableMapping.ColumnMappings.Add("EstadoServicio", "EstadoServicio")
            tableMapping.ColumnMappings.Add("FechaRecibida", "FechaRecibida")
            tableMapping.ColumnMappings.Add("FechaEntrega", "FechaEntrega")
            tableMapping.ColumnMappings.Add("objTecnicoAsignadoID", "objTecnicoAsignadoID")
            tableMapping.ColumnMappings.Add("NombreTecnico", "NombreTecnico")
            tableMapping.ColumnMappings.Add("ModeloMoto", "ModeloMoto")
            tableMapping.ColumnMappings.Add("Chasis", "Chasis")
            tableMapping.ColumnMappings.Add("NoMotor", "NoMotor")
            tableMapping.ColumnMappings.Add("MarcaMoto", "MarcaMoto")
            tableMapping.ColumnMappings.Add("TrabajosRealizados", "TrabajosRealizados")
            tableMapping.ColumnMappings.Add("objSccCuentaID", "objSccCuentaID")
            tableMapping.ColumnMappings.Add("objSccCuentaTiendaID", "objSccCuentaTiendaID")
            tableMapping.ColumnMappings.Add("NombreTiendaCuenta", "NombreTiendaCuenta")
            tableMapping.ColumnMappings.Add("CodigoTiendaCuenta", "CodigoTiendaCuenta")
            tableMapping.ColumnMappings.Add("NumeroServicio", "NumeroServicio")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.SCCUM.My.MySettings.Default.SCCUMConnectionString
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT StaServicioTallerID, Cliente, objServicioTiendaID, NombreTiendaServicio, C"& _ 
                "odigoTiendaServicio, objTipoServicioID, TipoServicio, EstadoServicio, FechaRecib"& _ 
                "ida, FechaEntrega, objTecnicoAsignadoID, NombreTecnico, ModeloMoto, Chasis, NoMo"& _ 
                "tor, MarcaMoto, TrabajosRealizados, objSccCuentaID, objSccCuentaTiendaID, Nombre"& _ 
                "TiendaCuenta, CodigoTiendaCuenta, NumeroServicio FROM vwStaServicioTallerBitacor"& _ 
                "aMoto"
            Me._commandCollection(0).CommandType = System.Data.CommandType.Text
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dtDatosServicioTallerBitacoraMoto.vwStaServicioTallerBitacoraMotoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dtDatosServicioTallerBitacoraMoto.vwStaServicioTallerBitacoraMotoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dtDatosServicioTallerBitacoraMoto.vwStaServicioTallerBitacoraMotoDataTable = New dtDatosServicioTallerBitacoraMoto.vwStaServicioTallerBitacoraMotoDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace

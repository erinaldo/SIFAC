'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("dtMinutaCliente"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dtMinutaCliente
    Inherits System.Data.DataSet
    
    Private tablevwSccMinutaCobro As vwSccMinutaCobroDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("vwSccMinutaCobro")) Is Nothing) Then
                MyBase.Tables.Add(New vwSccMinutaCobroDataTable(ds.Tables("vwSccMinutaCobro")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vwSccMinutaCobro() As vwSccMinutaCobroDataTable
        Get
            Return Me.tablevwSccMinutaCobro
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As dtMinutaCliente = CType(MyBase.Clone,dtMinutaCliente)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("vwSccMinutaCobro")) Is Nothing) Then
                MyBase.Tables.Add(New vwSccMinutaCobroDataTable(ds.Tables("vwSccMinutaCobro")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablevwSccMinutaCobro = CType(MyBase.Tables("vwSccMinutaCobro"),vwSccMinutaCobroDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevwSccMinutaCobro) Is Nothing) Then
                Me.tablevwSccMinutaCobro.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dtMinutaCliente"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dtMinutaCliente.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablevwSccMinutaCobro = New vwSccMinutaCobroDataTable
        MyBase.Tables.Add(Me.tablevwSccMinutaCobro)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializevwSccMinutaCobro() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dtMinutaCliente = New dtMinutaCliente
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub vwSccMinutaCobroRowChangeEventHandler(ByVal sender As Object, ByVal e As vwSccMinutaCobroRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vwSccMinutaCobroDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnSccCuentaID As System.Data.DataColumn
        
        Private columnTienda As System.Data.DataColumn
        
        Private columnCliente As System.Data.DataColumn
        
        Private columnCodigoTienda As System.Data.DataColumn
        
        Private columnStbTiendaID As System.Data.DataColumn
        
        Private columnStbPersonaID As System.Data.DataColumn
        
        Private columnSaldo As System.Data.DataColumn
        
        Private columnLimiteCredito As System.Data.DataColumn
        
        Private columnobjEstadoID As System.Data.DataColumn
        
        Private columnDescripcion As System.Data.DataColumn
        
        Private columnCodigo As System.Data.DataColumn
        
        Private columnClasificacion As System.Data.DataColumn
        
        Private columnobjCalificacionID As System.Data.DataColumn
        
        Private columnobjFacturaID As System.Data.DataColumn
        
        Private columnobjConceptoFactura As System.Data.DataColumn
        
        Private columnStbValorCatalogoID As System.Data.DataColumn
        
        Private columnConcepto As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vwSccMinutaCobro"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SccCuentaIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnSccCuentaID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TiendaColumn() As System.Data.DataColumn
            Get
                Return Me.columnTienda
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ClienteColumn() As System.Data.DataColumn
            Get
                Return Me.columnCliente
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigoTiendaColumn() As System.Data.DataColumn
            Get
                Return Me.columnCodigoTienda
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StbTiendaIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnStbTiendaID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StbPersonaIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnStbPersonaID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SaldoColumn() As System.Data.DataColumn
            Get
                Return Me.columnSaldo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LimiteCreditoColumn() As System.Data.DataColumn
            Get
                Return Me.columnLimiteCredito
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objEstadoIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjEstadoID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescripcionColumn() As System.Data.DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigoColumn() As System.Data.DataColumn
            Get
                Return Me.columnCodigo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ClasificacionColumn() As System.Data.DataColumn
            Get
                Return Me.columnClasificacion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objCalificacionIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjCalificacionID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objFacturaIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjFacturaID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objConceptoFacturaColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjConceptoFactura
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StbValorCatalogoIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnStbValorCatalogoID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConceptoColumn() As System.Data.DataColumn
            Get
                Return Me.columnConcepto
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vwSccMinutaCobroRow
            Get
                Return CType(Me.Rows(index),vwSccMinutaCobroRow)
            End Get
        End Property
        
        Public Event vwSccMinutaCobroRowChanging As vwSccMinutaCobroRowChangeEventHandler
        
        Public Event vwSccMinutaCobroRowChanged As vwSccMinutaCobroRowChangeEventHandler
        
        Public Event vwSccMinutaCobroRowDeleting As vwSccMinutaCobroRowChangeEventHandler
        
        Public Event vwSccMinutaCobroRowDeleted As vwSccMinutaCobroRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddvwSccMinutaCobroRow(ByVal row As vwSccMinutaCobroRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddvwSccMinutaCobroRow( _
                    ByVal SccCuentaID As String,  _
                    ByVal Tienda As String,  _
                    ByVal Cliente As String,  _
                    ByVal CodigoTienda As String,  _
                    ByVal StbTiendaID As Integer,  _
                    ByVal StbPersonaID As String,  _
                    ByVal Saldo As Decimal,  _
                    ByVal LimiteCredito As Decimal,  _
                    ByVal objEstadoID As Integer,  _
                    ByVal Descripcion As String,  _
                    ByVal Codigo As String,  _
                    ByVal Clasificacion As String,  _
                    ByVal objCalificacionID As Integer,  _
                    ByVal objFacturaID As Integer,  _
                    ByVal objConceptoFactura As Integer,  _
                    ByVal StbValorCatalogoID As Integer,  _
                    ByVal Concepto As String) As vwSccMinutaCobroRow
            Dim rowvwSccMinutaCobroRow As vwSccMinutaCobroRow = CType(Me.NewRow,vwSccMinutaCobroRow)
            rowvwSccMinutaCobroRow.ItemArray = New Object() {SccCuentaID, Tienda, Cliente, CodigoTienda, StbTiendaID, StbPersonaID, Saldo, LimiteCredito, objEstadoID, Descripcion, Codigo, Clasificacion, objCalificacionID, objFacturaID, objConceptoFactura, StbValorCatalogoID, Concepto}
            Me.Rows.Add(rowvwSccMinutaCobroRow)
            Return rowvwSccMinutaCobroRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySccCuentaIDStbTiendaIDStbPersonaIDStbValorCatalogoID(ByVal SccCuentaID As String, ByVal StbTiendaID As Integer, ByVal StbPersonaID As String, ByVal StbValorCatalogoID As Integer) As vwSccMinutaCobroRow
            Return CType(Me.Rows.Find(New Object() {SccCuentaID, StbTiendaID, StbPersonaID, StbValorCatalogoID}),vwSccMinutaCobroRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As vwSccMinutaCobroDataTable = CType(MyBase.Clone,vwSccMinutaCobroDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New vwSccMinutaCobroDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSccCuentaID = MyBase.Columns("SccCuentaID")
            Me.columnTienda = MyBase.Columns("Tienda")
            Me.columnCliente = MyBase.Columns("Cliente")
            Me.columnCodigoTienda = MyBase.Columns("CodigoTienda")
            Me.columnStbTiendaID = MyBase.Columns("StbTiendaID")
            Me.columnStbPersonaID = MyBase.Columns("StbPersonaID")
            Me.columnSaldo = MyBase.Columns("Saldo")
            Me.columnLimiteCredito = MyBase.Columns("LimiteCredito")
            Me.columnobjEstadoID = MyBase.Columns("objEstadoID")
            Me.columnDescripcion = MyBase.Columns("Descripcion")
            Me.columnCodigo = MyBase.Columns("Codigo")
            Me.columnClasificacion = MyBase.Columns("Clasificacion")
            Me.columnobjCalificacionID = MyBase.Columns("objCalificacionID")
            Me.columnobjFacturaID = MyBase.Columns("objFacturaID")
            Me.columnobjConceptoFactura = MyBase.Columns("objConceptoFactura")
            Me.columnStbValorCatalogoID = MyBase.Columns("StbValorCatalogoID")
            Me.columnConcepto = MyBase.Columns("Concepto")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSccCuentaID = New System.Data.DataColumn("SccCuentaID", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSccCuentaID)
            Me.columnTienda = New System.Data.DataColumn("Tienda", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTienda)
            Me.columnCliente = New System.Data.DataColumn("Cliente", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCliente)
            Me.columnCodigoTienda = New System.Data.DataColumn("CodigoTienda", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoTienda)
            Me.columnStbTiendaID = New System.Data.DataColumn("StbTiendaID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStbTiendaID)
            Me.columnStbPersonaID = New System.Data.DataColumn("StbPersonaID", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStbPersonaID)
            Me.columnSaldo = New System.Data.DataColumn("Saldo", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldo)
            Me.columnLimiteCredito = New System.Data.DataColumn("LimiteCredito", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLimiteCredito)
            Me.columnobjEstadoID = New System.Data.DataColumn("objEstadoID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjEstadoID)
            Me.columnDescripcion = New System.Data.DataColumn("Descripcion", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcion)
            Me.columnCodigo = New System.Data.DataColumn("Codigo", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigo)
            Me.columnClasificacion = New System.Data.DataColumn("Clasificacion", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClasificacion)
            Me.columnobjCalificacionID = New System.Data.DataColumn("objCalificacionID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjCalificacionID)
            Me.columnobjFacturaID = New System.Data.DataColumn("objFacturaID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjFacturaID)
            Me.columnobjConceptoFactura = New System.Data.DataColumn("objConceptoFactura", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjConceptoFactura)
            Me.columnStbValorCatalogoID = New System.Data.DataColumn("StbValorCatalogoID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStbValorCatalogoID)
            Me.columnConcepto = New System.Data.DataColumn("Concepto", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcepto)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnSccCuentaID, Me.columnStbTiendaID, Me.columnStbPersonaID, Me.columnStbValorCatalogoID}, true))
            Me.columnSccCuentaID.AllowDBNull = false
            Me.columnSccCuentaID.MaxLength = 15
            Me.columnTienda.AllowDBNull = false
            Me.columnTienda.MaxLength = 50
            Me.columnCliente.MaxLength = 255
            Me.columnCodigoTienda.MaxLength = 4
            Me.columnStbTiendaID.AllowDBNull = false
            Me.columnStbPersonaID.AllowDBNull = false
            Me.columnStbPersonaID.MaxLength = 16
            Me.columnSaldo.AllowDBNull = false
            Me.columnLimiteCredito.AllowDBNull = false
            Me.columnDescripcion.AllowDBNull = false
            Me.columnDescripcion.MaxLength = 100
            Me.columnCodigo.AllowDBNull = false
            Me.columnCodigo.MaxLength = 50
            Me.columnClasificacion.AllowDBNull = false
            Me.columnClasificacion.MaxLength = 100
            Me.columnobjConceptoFactura.AllowDBNull = false
            Me.columnStbValorCatalogoID.AllowDBNull = false
            Me.columnConcepto.AllowDBNull = false
            Me.columnConcepto.MaxLength = 100
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewvwSccMinutaCobroRow() As vwSccMinutaCobroRow
            Return CType(Me.NewRow,vwSccMinutaCobroRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New vwSccMinutaCobroRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(vwSccMinutaCobroRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vwSccMinutaCobroRowChangedEvent) Is Nothing) Then
                RaiseEvent vwSccMinutaCobroRowChanged(Me, New vwSccMinutaCobroRowChangeEvent(CType(e.Row,vwSccMinutaCobroRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vwSccMinutaCobroRowChangingEvent) Is Nothing) Then
                RaiseEvent vwSccMinutaCobroRowChanging(Me, New vwSccMinutaCobroRowChangeEvent(CType(e.Row,vwSccMinutaCobroRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vwSccMinutaCobroRowDeletedEvent) Is Nothing) Then
                RaiseEvent vwSccMinutaCobroRowDeleted(Me, New vwSccMinutaCobroRowChangeEvent(CType(e.Row,vwSccMinutaCobroRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vwSccMinutaCobroRowDeletingEvent) Is Nothing) Then
                RaiseEvent vwSccMinutaCobroRowDeleting(Me, New vwSccMinutaCobroRowChangeEvent(CType(e.Row,vwSccMinutaCobroRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovevwSccMinutaCobroRow(ByVal row As vwSccMinutaCobroRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dtMinutaCliente = New dtMinutaCliente
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vwSccMinutaCobroDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class vwSccMinutaCobroRow
        Inherits System.Data.DataRow
        
        Private tablevwSccMinutaCobro As vwSccMinutaCobroDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevwSccMinutaCobro = CType(Me.Table,vwSccMinutaCobroDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SccCuentaID() As String
            Get
                Return CType(Me(Me.tablevwSccMinutaCobro.SccCuentaIDColumn),String)
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.SccCuentaIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tienda() As String
            Get
                Return CType(Me(Me.tablevwSccMinutaCobro.TiendaColumn),String)
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.TiendaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwSccMinutaCobro.ClienteColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'Cliente' in table 'vwSccMinutaCobro' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.ClienteColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodigoTienda() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwSccMinutaCobro.CodigoTiendaColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'CodigoTienda' in table 'vwSccMinutaCobro' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.CodigoTiendaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property StbTiendaID() As Integer
            Get
                Return CType(Me(Me.tablevwSccMinutaCobro.StbTiendaIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.StbTiendaIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property StbPersonaID() As String
            Get
                Return CType(Me(Me.tablevwSccMinutaCobro.StbPersonaIDColumn),String)
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.StbPersonaIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Saldo() As Decimal
            Get
                Return CType(Me(Me.tablevwSccMinutaCobro.SaldoColumn),Decimal)
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.SaldoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LimiteCredito() As Decimal
            Get
                Return CType(Me(Me.tablevwSccMinutaCobro.LimiteCreditoColumn),Decimal)
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.LimiteCreditoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objEstadoID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwSccMinutaCobro.objEstadoIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'objEstadoID' in table 'vwSccMinutaCobro' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.objEstadoIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Descripcion() As String
            Get
                Return CType(Me(Me.tablevwSccMinutaCobro.DescripcionColumn),String)
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.DescripcionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Codigo() As String
            Get
                Return CType(Me(Me.tablevwSccMinutaCobro.CodigoColumn),String)
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.CodigoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Clasificacion() As String
            Get
                Return CType(Me(Me.tablevwSccMinutaCobro.ClasificacionColumn),String)
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.ClasificacionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objCalificacionID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwSccMinutaCobro.objCalificacionIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'objCalificacionID' in table 'vwSccMinutaCobro' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.objCalificacionIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objFacturaID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwSccMinutaCobro.objFacturaIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'objFacturaID' in table 'vwSccMinutaCobro' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.objFacturaIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objConceptoFactura() As Integer
            Get
                Return CType(Me(Me.tablevwSccMinutaCobro.objConceptoFacturaColumn),Integer)
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.objConceptoFacturaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property StbValorCatalogoID() As Integer
            Get
                Return CType(Me(Me.tablevwSccMinutaCobro.StbValorCatalogoIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.StbValorCatalogoIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Concepto() As String
            Get
                Return CType(Me(Me.tablevwSccMinutaCobro.ConceptoColumn),String)
            End Get
            Set
                Me(Me.tablevwSccMinutaCobro.ConceptoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsClienteNull() As Boolean
            Return Me.IsNull(Me.tablevwSccMinutaCobro.ClienteColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetClienteNull()
            Me(Me.tablevwSccMinutaCobro.ClienteColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodigoTiendaNull() As Boolean
            Return Me.IsNull(Me.tablevwSccMinutaCobro.CodigoTiendaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodigoTiendaNull()
            Me(Me.tablevwSccMinutaCobro.CodigoTiendaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsobjEstadoIDNull() As Boolean
            Return Me.IsNull(Me.tablevwSccMinutaCobro.objEstadoIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetobjEstadoIDNull()
            Me(Me.tablevwSccMinutaCobro.objEstadoIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsobjCalificacionIDNull() As Boolean
            Return Me.IsNull(Me.tablevwSccMinutaCobro.objCalificacionIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetobjCalificacionIDNull()
            Me(Me.tablevwSccMinutaCobro.objCalificacionIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsobjFacturaIDNull() As Boolean
            Return Me.IsNull(Me.tablevwSccMinutaCobro.objFacturaIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetobjFacturaIDNull()
            Me(Me.tablevwSccMinutaCobro.objFacturaIDColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class vwSccMinutaCobroRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As vwSccMinutaCobroRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As vwSccMinutaCobroRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As vwSccMinutaCobroRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dtMinutaClienteTableAdapters
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.ComponentModel.ToolboxItem(true),  _
     System.ComponentModel.DataObjectAttribute(true),  _
     System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vwSccMinutaCobroTableAdapter
        Inherits System.ComponentModel.Component
        
        Private WithEvents _adapter As System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As System.Data.Common.DataTableMapping = New System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vwSccMinutaCobro"
            tableMapping.ColumnMappings.Add("SccCuentaID", "SccCuentaID")
            tableMapping.ColumnMappings.Add("Tienda", "Tienda")
            tableMapping.ColumnMappings.Add("Cliente", "Cliente")
            tableMapping.ColumnMappings.Add("CodigoTienda", "CodigoTienda")
            tableMapping.ColumnMappings.Add("StbTiendaID", "StbTiendaID")
            tableMapping.ColumnMappings.Add("StbPersonaID", "StbPersonaID")
            tableMapping.ColumnMappings.Add("Saldo", "Saldo")
            tableMapping.ColumnMappings.Add("LimiteCredito", "LimiteCredito")
            tableMapping.ColumnMappings.Add("objEstadoID", "objEstadoID")
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion")
            tableMapping.ColumnMappings.Add("Codigo", "Codigo")
            tableMapping.ColumnMappings.Add("Clasificacion", "Clasificacion")
            tableMapping.ColumnMappings.Add("objCalificacionID", "objCalificacionID")
            tableMapping.ColumnMappings.Add("objFacturaID", "objFacturaID")
            tableMapping.ColumnMappings.Add("objConceptoFactura", "objConceptoFactura")
            tableMapping.ColumnMappings.Add("StbValorCatalogoID", "StbValorCatalogoID")
            tableMapping.ColumnMappings.Add("Concepto", "Concepto")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.SCCUM.My.MySettings.Default.SCCUMConnectionString
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SccCuentaID, Tienda, Cliente, CodigoTienda, StbTiendaID, StbPersonaID, Sal"& _ 
                "do, LimiteCredito, objEstadoID, Descripcion, Codigo, Clasificacion, objCalificac"& _ 
                "ionID, objFacturaID, objConceptoFactura, StbValorCatalogoID, Concepto FROM dbo.v"& _ 
                "wSccMinutaCobro"
            Me._commandCollection(0).CommandType = System.Data.CommandType.Text
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dtMinutaCliente.vwSccMinutaCobroDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dtMinutaCliente.vwSccMinutaCobroDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dtMinutaCliente.vwSccMinutaCobroDataTable = New dtMinutaCliente.vwSccMinutaCobroDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace

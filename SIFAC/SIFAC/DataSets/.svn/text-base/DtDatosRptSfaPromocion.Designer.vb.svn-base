'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("DtDatosRptSfaPromocion"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DtDatosRptSfaPromocion
    Inherits System.Data.DataSet
    
    Private tablevwRptSfaPromocion As vwRptSfaPromocionDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("vwRptSfaPromocion")) Is Nothing) Then
                MyBase.Tables.Add(New vwRptSfaPromocionDataTable(ds.Tables("vwRptSfaPromocion")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vwRptSfaPromocion() As vwRptSfaPromocionDataTable
        Get
            Return Me.tablevwRptSfaPromocion
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As DtDatosRptSfaPromocion = CType(MyBase.Clone,DtDatosRptSfaPromocion)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("vwRptSfaPromocion")) Is Nothing) Then
                MyBase.Tables.Add(New vwRptSfaPromocionDataTable(ds.Tables("vwRptSfaPromocion")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablevwRptSfaPromocion = CType(MyBase.Tables("vwRptSfaPromocion"),vwRptSfaPromocionDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevwRptSfaPromocion) Is Nothing) Then
                Me.tablevwRptSfaPromocion.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DtDatosRptSfaPromocion"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DtDatosRptSfaPromocion.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablevwRptSfaPromocion = New vwRptSfaPromocionDataTable
        MyBase.Tables.Add(Me.tablevwRptSfaPromocion)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializevwRptSfaPromocion() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DtDatosRptSfaPromocion = New DtDatosRptSfaPromocion
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub vwRptSfaPromocionRowChangeEventHandler(ByVal sender As Object, ByVal e As vwRptSfaPromocionRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vwRptSfaPromocionDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnSfaPromocionID As System.Data.DataColumn
        
        Private columnDescripcion As System.Data.DataColumn
        
        Private columnTiendasAplica As System.Data.DataColumn
        
        Private columnfechainicio As System.Data.DataColumn
        
        Private columnfechafin As System.Data.DataColumn
        
        Private columnpromocionglobal As System.Data.DataColumn
        
        Private columnaplicanrestricciones As System.Data.DataColumn
        
        Private columnactivo As System.Data.DataColumn
        
        Private columnobjRepuestoID As System.Data.DataColumn
        
        Private columnobjTipoRepuesto As System.Data.DataColumn
        
        Private columnDescripcionRepuestoTipoRepuesto As System.Data.DataColumn
        
        Private columnPrecio As System.Data.DataColumn
        
        Private columnDescuento As System.Data.DataColumn
        
        Private columnPrecioPromocion As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vwRptSfaPromocion"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SfaPromocionIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnSfaPromocionID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescripcionColumn() As System.Data.DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TiendasAplicaColumn() As System.Data.DataColumn
            Get
                Return Me.columnTiendasAplica
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechainicioColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechainicio
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechafinColumn() As System.Data.DataColumn
            Get
                Return Me.columnfechafin
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property promocionglobalColumn() As System.Data.DataColumn
            Get
                Return Me.columnpromocionglobal
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property aplicanrestriccionesColumn() As System.Data.DataColumn
            Get
                Return Me.columnaplicanrestricciones
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activoColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivo
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objRepuestoIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjRepuestoID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property objTipoRepuestoColumn() As System.Data.DataColumn
            Get
                Return Me.columnobjTipoRepuesto
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescripcionRepuestoTipoRepuestoColumn() As System.Data.DataColumn
            Get
                Return Me.columnDescripcionRepuestoTipoRepuesto
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrecioColumn() As System.Data.DataColumn
            Get
                Return Me.columnPrecio
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescuentoColumn() As System.Data.DataColumn
            Get
                Return Me.columnDescuento
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrecioPromocionColumn() As System.Data.DataColumn
            Get
                Return Me.columnPrecioPromocion
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vwRptSfaPromocionRow
            Get
                Return CType(Me.Rows(index),vwRptSfaPromocionRow)
            End Get
        End Property
        
        Public Event vwRptSfaPromocionRowChanging As vwRptSfaPromocionRowChangeEventHandler
        
        Public Event vwRptSfaPromocionRowChanged As vwRptSfaPromocionRowChangeEventHandler
        
        Public Event vwRptSfaPromocionRowDeleting As vwRptSfaPromocionRowChangeEventHandler
        
        Public Event vwRptSfaPromocionRowDeleted As vwRptSfaPromocionRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddvwRptSfaPromocionRow(ByVal row As vwRptSfaPromocionRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddvwRptSfaPromocionRow(ByVal SfaPromocionID As Integer, ByVal Descripcion As String, ByVal TiendasAplica As String, ByVal fechainicio As Date, ByVal fechafin As Date, ByVal promocionglobal As Boolean, ByVal aplicanrestricciones As Boolean, ByVal activo As Boolean, ByVal objRepuestoID As Integer, ByVal objTipoRepuesto As Integer, ByVal DescripcionRepuestoTipoRepuesto As String, ByVal Precio As Decimal, ByVal Descuento As Decimal, ByVal PrecioPromocion As Decimal) As vwRptSfaPromocionRow
            Dim rowvwRptSfaPromocionRow As vwRptSfaPromocionRow = CType(Me.NewRow,vwRptSfaPromocionRow)
            rowvwRptSfaPromocionRow.ItemArray = New Object() {SfaPromocionID, Descripcion, TiendasAplica, fechainicio, fechafin, promocionglobal, aplicanrestricciones, activo, objRepuestoID, objTipoRepuesto, DescripcionRepuestoTipoRepuesto, Precio, Descuento, PrecioPromocion}
            Me.Rows.Add(rowvwRptSfaPromocionRow)
            Return rowvwRptSfaPromocionRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySfaPromocionID(ByVal SfaPromocionID As Integer) As vwRptSfaPromocionRow
            Return CType(Me.Rows.Find(New Object() {SfaPromocionID}),vwRptSfaPromocionRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As vwRptSfaPromocionDataTable = CType(MyBase.Clone,vwRptSfaPromocionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New vwRptSfaPromocionDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSfaPromocionID = MyBase.Columns("SfaPromocionID")
            Me.columnDescripcion = MyBase.Columns("Descripcion")
            Me.columnTiendasAplica = MyBase.Columns("TiendasAplica")
            Me.columnfechainicio = MyBase.Columns("fechainicio")
            Me.columnfechafin = MyBase.Columns("fechafin")
            Me.columnpromocionglobal = MyBase.Columns("promocionglobal")
            Me.columnaplicanrestricciones = MyBase.Columns("aplicanrestricciones")
            Me.columnactivo = MyBase.Columns("activo")
            Me.columnobjRepuestoID = MyBase.Columns("objRepuestoID")
            Me.columnobjTipoRepuesto = MyBase.Columns("objTipoRepuesto")
            Me.columnDescripcionRepuestoTipoRepuesto = MyBase.Columns("DescripcionRepuestoTipoRepuesto")
            Me.columnPrecio = MyBase.Columns("Precio")
            Me.columnDescuento = MyBase.Columns("Descuento")
            Me.columnPrecioPromocion = MyBase.Columns("PrecioPromocion")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSfaPromocionID = New System.Data.DataColumn("SfaPromocionID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSfaPromocionID)
            Me.columnDescripcion = New System.Data.DataColumn("Descripcion", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcion)
            Me.columnTiendasAplica = New System.Data.DataColumn("TiendasAplica", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTiendasAplica)
            Me.columnfechainicio = New System.Data.DataColumn("fechainicio", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechainicio)
            Me.columnfechafin = New System.Data.DataColumn("fechafin", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechafin)
            Me.columnpromocionglobal = New System.Data.DataColumn("promocionglobal", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpromocionglobal)
            Me.columnaplicanrestricciones = New System.Data.DataColumn("aplicanrestricciones", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaplicanrestricciones)
            Me.columnactivo = New System.Data.DataColumn("activo", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivo)
            Me.columnobjRepuestoID = New System.Data.DataColumn("objRepuestoID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjRepuestoID)
            Me.columnobjTipoRepuesto = New System.Data.DataColumn("objTipoRepuesto", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobjTipoRepuesto)
            Me.columnDescripcionRepuestoTipoRepuesto = New System.Data.DataColumn("DescripcionRepuestoTipoRepuesto", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcionRepuestoTipoRepuesto)
            Me.columnPrecio = New System.Data.DataColumn("Precio", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio)
            Me.columnDescuento = New System.Data.DataColumn("Descuento", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescuento)
            Me.columnPrecioPromocion = New System.Data.DataColumn("PrecioPromocion", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioPromocion)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnSfaPromocionID}, true))
            Me.columnSfaPromocionID.AllowDBNull = false
            Me.columnSfaPromocionID.Unique = true
            Me.columnDescripcion.AllowDBNull = false
            Me.columnDescripcion.MaxLength = 100
            Me.columnTiendasAplica.ReadOnly = true
            Me.columnTiendasAplica.MaxLength = 500
            Me.columnfechainicio.AllowDBNull = false
            Me.columnfechafin.AllowDBNull = false
            Me.columnpromocionglobal.AllowDBNull = false
            Me.columnaplicanrestricciones.AllowDBNull = false
            Me.columnactivo.AllowDBNull = false
            Me.columnDescripcionRepuestoTipoRepuesto.ReadOnly = true
            Me.columnDescripcionRepuestoTipoRepuesto.MaxLength = 100
            Me.columnPrecio.AllowDBNull = false
            Me.columnDescuento.AllowDBNull = false
            Me.columnPrecioPromocion.ReadOnly = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewvwRptSfaPromocionRow() As vwRptSfaPromocionRow
            Return CType(Me.NewRow,vwRptSfaPromocionRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New vwRptSfaPromocionRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(vwRptSfaPromocionRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vwRptSfaPromocionRowChangedEvent) Is Nothing) Then
                RaiseEvent vwRptSfaPromocionRowChanged(Me, New vwRptSfaPromocionRowChangeEvent(CType(e.Row,vwRptSfaPromocionRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vwRptSfaPromocionRowChangingEvent) Is Nothing) Then
                RaiseEvent vwRptSfaPromocionRowChanging(Me, New vwRptSfaPromocionRowChangeEvent(CType(e.Row,vwRptSfaPromocionRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vwRptSfaPromocionRowDeletedEvent) Is Nothing) Then
                RaiseEvent vwRptSfaPromocionRowDeleted(Me, New vwRptSfaPromocionRowChangeEvent(CType(e.Row,vwRptSfaPromocionRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vwRptSfaPromocionRowDeletingEvent) Is Nothing) Then
                RaiseEvent vwRptSfaPromocionRowDeleting(Me, New vwRptSfaPromocionRowChangeEvent(CType(e.Row,vwRptSfaPromocionRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovevwRptSfaPromocionRow(ByVal row As vwRptSfaPromocionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As DtDatosRptSfaPromocion = New DtDatosRptSfaPromocion
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vwRptSfaPromocionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class vwRptSfaPromocionRow
        Inherits System.Data.DataRow
        
        Private tablevwRptSfaPromocion As vwRptSfaPromocionDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevwRptSfaPromocion = CType(Me.Table,vwRptSfaPromocionDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SfaPromocionID() As Integer
            Get
                Return CType(Me(Me.tablevwRptSfaPromocion.SfaPromocionIDColumn),Integer)
            End Get
            Set
                Me(Me.tablevwRptSfaPromocion.SfaPromocionIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Descripcion() As String
            Get
                Return CType(Me(Me.tablevwRptSfaPromocion.DescripcionColumn),String)
            End Get
            Set
                Me(Me.tablevwRptSfaPromocion.DescripcionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TiendasAplica() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwRptSfaPromocion.TiendasAplicaColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'TiendasAplica' in table 'vwRptSfaPromocion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwRptSfaPromocion.TiendasAplicaColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechainicio() As Date
            Get
                Return CType(Me(Me.tablevwRptSfaPromocion.fechainicioColumn),Date)
            End Get
            Set
                Me(Me.tablevwRptSfaPromocion.fechainicioColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechafin() As Date
            Get
                Return CType(Me(Me.tablevwRptSfaPromocion.fechafinColumn),Date)
            End Get
            Set
                Me(Me.tablevwRptSfaPromocion.fechafinColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property promocionglobal() As Boolean
            Get
                Return CType(Me(Me.tablevwRptSfaPromocion.promocionglobalColumn),Boolean)
            End Get
            Set
                Me(Me.tablevwRptSfaPromocion.promocionglobalColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property aplicanrestricciones() As Boolean
            Get
                Return CType(Me(Me.tablevwRptSfaPromocion.aplicanrestriccionesColumn),Boolean)
            End Get
            Set
                Me(Me.tablevwRptSfaPromocion.aplicanrestriccionesColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activo() As Boolean
            Get
                Return CType(Me(Me.tablevwRptSfaPromocion.activoColumn),Boolean)
            End Get
            Set
                Me(Me.tablevwRptSfaPromocion.activoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objRepuestoID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwRptSfaPromocion.objRepuestoIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'objRepuestoID' in table 'vwRptSfaPromocion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwRptSfaPromocion.objRepuestoIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property objTipoRepuesto() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwRptSfaPromocion.objTipoRepuestoColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'objTipoRepuesto' in table 'vwRptSfaPromocion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwRptSfaPromocion.objTipoRepuestoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescripcionRepuestoTipoRepuesto() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwRptSfaPromocion.DescripcionRepuestoTipoRepuestoColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'DescripcionRepuestoTipoRepuesto' in table 'vwRptSfaPromocio"& _ 
                            "n' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwRptSfaPromocion.DescripcionRepuestoTipoRepuestoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Precio() As Decimal
            Get
                Return CType(Me(Me.tablevwRptSfaPromocion.PrecioColumn),Decimal)
            End Get
            Set
                Me(Me.tablevwRptSfaPromocion.PrecioColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Descuento() As Decimal
            Get
                Return CType(Me(Me.tablevwRptSfaPromocion.DescuentoColumn),Decimal)
            End Get
            Set
                Me(Me.tablevwRptSfaPromocion.DescuentoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrecioPromocion() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevwRptSfaPromocion.PrecioPromocionColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PrecioPromocion' in table 'vwRptSfaPromocion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwRptSfaPromocion.PrecioPromocionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTiendasAplicaNull() As Boolean
            Return Me.IsNull(Me.tablevwRptSfaPromocion.TiendasAplicaColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTiendasAplicaNull()
            Me(Me.tablevwRptSfaPromocion.TiendasAplicaColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsobjRepuestoIDNull() As Boolean
            Return Me.IsNull(Me.tablevwRptSfaPromocion.objRepuestoIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetobjRepuestoIDNull()
            Me(Me.tablevwRptSfaPromocion.objRepuestoIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsobjTipoRepuestoNull() As Boolean
            Return Me.IsNull(Me.tablevwRptSfaPromocion.objTipoRepuestoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetobjTipoRepuestoNull()
            Me(Me.tablevwRptSfaPromocion.objTipoRepuestoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescripcionRepuestoTipoRepuestoNull() As Boolean
            Return Me.IsNull(Me.tablevwRptSfaPromocion.DescripcionRepuestoTipoRepuestoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescripcionRepuestoTipoRepuestoNull()
            Me(Me.tablevwRptSfaPromocion.DescripcionRepuestoTipoRepuestoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrecioPromocionNull() As Boolean
            Return Me.IsNull(Me.tablevwRptSfaPromocion.PrecioPromocionColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrecioPromocionNull()
            Me(Me.tablevwRptSfaPromocion.PrecioPromocionColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class vwRptSfaPromocionRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As vwRptSfaPromocionRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As vwRptSfaPromocionRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As vwRptSfaPromocionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DtDatosRptSfaPromocionTableAdapters
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.ComponentModel.ToolboxItem(true),  _
     System.ComponentModel.DataObjectAttribute(true),  _
     System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vwRptSfaPromocionTableAdapter
        Inherits System.ComponentModel.Component
        
        Private WithEvents _adapter As System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As System.Data.Common.DataTableMapping = New System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vwRptSfaPromocion"
            tableMapping.ColumnMappings.Add("SfaPromocionID", "SfaPromocionID")
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion")
            tableMapping.ColumnMappings.Add("TiendasAplica", "TiendasAplica")
            tableMapping.ColumnMappings.Add("fechainicio", "fechainicio")
            tableMapping.ColumnMappings.Add("fechafin", "fechafin")
            tableMapping.ColumnMappings.Add("promocionglobal", "promocionglobal")
            tableMapping.ColumnMappings.Add("aplicanrestricciones", "aplicanrestricciones")
            tableMapping.ColumnMappings.Add("activo", "activo")
            tableMapping.ColumnMappings.Add("objRepuestoID", "objRepuestoID")
            tableMapping.ColumnMappings.Add("objTipoRepuesto", "objTipoRepuesto")
            tableMapping.ColumnMappings.Add("DescripcionRepuestoTipoRepuesto", "DescripcionRepuestoTipoRepuesto")
            tableMapping.ColumnMappings.Add("Precio", "Precio")
            tableMapping.ColumnMappings.Add("Descuento", "Descuento")
            tableMapping.ColumnMappings.Add("PrecioPromocion", "PrecioPromocion")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.SCCUM.My.MySettings.Default.SCCUMConnectionString
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SfaPromocionID, Descripcion, TiendasAplica, fechainicio, fechafin, promoci"& _ 
                "onglobal, aplicanrestricciones, activo, objRepuestoID, objTipoRepuesto, Descripc"& _ 
                "ionRepuestoTipoRepuesto, Precio, Descuento, PrecioPromocion FROM dbo.vwRptSfaPro"& _ 
                "mocion"
            Me._commandCollection(0).CommandType = System.Data.CommandType.Text
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DtDatosRptSfaPromocion.vwRptSfaPromocionDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DtDatosRptSfaPromocion.vwRptSfaPromocionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DtDatosRptSfaPromocion.vwRptSfaPromocionDataTable = New DtDatosRptSfaPromocion.vwRptSfaPromocionDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
